language: swift
osx_image: xcode10.1

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - PROJECT=VirgilCrypto.xcodeproj
    - IOS_SDK=iphonesimulator12.1
    - MACOS_SDK=macosx10.14
    - TVOS_SDK=appletvsimulator12.1
    - WATCHOS_SDK=watchsimulator5.1
    - CRYPTO_FRAMEWORK_NAME=VirgilCrypto
  matrix:
    - DESTINATION="OS=12.1,name=iPhone SE"                   PREFIX="iOS"      SDK="$IOS_SDK"      BUILD="2"  PUBLISH_CARTHAGE="NO"   PUBLISH_POD="NO"
    - DESTINATION="arch=x86_64"                              PREFIX="macOS"    SDK="$MACOS_SDK"    BUILD="2"  PUBLISH_CARTHAGE="NO"   PUBLISH_POD="NO"
    - DESTINATION="OS=12.1,name=Apple TV 4K"                 PREFIX="tvOS"     SDK="$TVOS_SDK"     BUILD="2"  PUBLISH_CARTHAGE="NO"   PUBLISH_POD="NO"
    - DESTINATION="OS=5.1,name=Apple Watch Series 4 - 44mm"  PREFIX="watchOS"  SDK="$WATCHOS_SDK"  BUILD="1"  PUBLISH_CARTHAGE="NO"   PUBLISH_POD="NO"
    - DESTINATION=""                                         PREFIX=""         SDK=""              BUILD="0"  PUBLISH_CARTHAGE="YES"  PUBLISH_POD="YES"

before_install:
  - set -e
  - set -o pipefail
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - xcodebuild -version
  - xcodebuild -showsdks
  - instruments -s devices

script:
  - carthage version
  - carthage bootstrap

  - projs=( "VirgilCryptoCommon" "VirgilCryptoFoundation" "VirgilCryptoPythia" "VirgilCryptoRatchet" )

  - |
    for proj in "${projs[@]}"; do
      SCHEME="${proj}_${PREFIX}"

      if [ $BUILD == "2" ]; then
        # Build Framework
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug clean build-for-testing | xcpretty;
        # Run Tests
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug test-without-building | xcpretty;
      elif [ $BUILD == "1" ]; then
        # Build Framework
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build | xcpretty;
      else
      fi
    done

  # Build with carthage
  - if [ $PUBLISH_CARTHAGE == "YES" ]; then
      carthage build --no-skip-current;
    fi
  
  # Check pod lib
  - if [ $PUBLISH_POD == "YES" ]; then
      gem install cocoapods --pre;
      pod repo update;
      pod lib lint VirgilCrypto.podspec;
    fi

before_deploy:
  - carthage archive

after_success:
  - pod trunk push VirgilCryptoCommon
  - pod trunk push VirgilCryptoFoundation
  - pod trunk push VirgilCryptoPythia
  - pod trunk push VirgilCryptoRatchet

deploy:
  - provider: releases
    api_key: $GITHUB_ACCESS_TOKEN
    file:
      - "$CRYPTO_FRAMEWORK_NAME.framework.zip"
    skip_cleanup: true
    on:
      repo: VirgilSecurity/virgil-cryptowrapper-x
      tags: true
      condition: $PUBLISH_CARTHAGE = "YES"