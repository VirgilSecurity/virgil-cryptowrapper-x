{"Protocols/SaltedKdf.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFSaltedKdf(im)resetWithSalt:iterationCount:":{"name":"reset(salt:iterationCount:)","abstract":"<p>Prepare algorithm to derive new key.</p>","parent_name":"SaltedKdf"},"Protocols/SaltedKdf.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFSaltedKdf(im)setInfoWithInfo:":{"name":"setInfo(info:)","abstract":"<p>Setup application specific information (optional).","parent_name":"SaltedKdf"},"Protocols/Random.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFRandom(im)randomWithDataLen:error:":{"name":"random(dataLen:)","abstract":"<p>Generate random bytes.","parent_name":"Random"},"Protocols/Random.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFRandom(im)reseedAndReturnError:":{"name":"reseed()","abstract":"<p>Retrieve new seed data from the entropy sources.</p>","parent_name":"Random"},"Protocols/PrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFPrivateKey(im)extractPublicKey":{"name":"extractPublicKey()","abstract":"<p>Extract public key from the private key.</p>","parent_name":"PrivateKey"},"Protocols/MessageInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMessageInfoSerializer(py)prefixLen":{"name":"prefixLen","abstract":"<p>Undocumented</p>","parent_name":"MessageInfoSerializer"},"Protocols/MessageInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMessageInfoSerializer(im)serializedLenWithMessageInfo:":{"name":"serializedLen(messageInfo:)","abstract":"<p>Return buffer size enough to hold serialized message info.</p>","parent_name":"MessageInfoSerializer"},"Protocols/MessageInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMessageInfoSerializer(im)serializeWithMessageInfo:":{"name":"serialize(messageInfo:)","abstract":"<p>Serialize class <q>message info</q>.</p>","parent_name":"MessageInfoSerializer"},"Protocols/MessageInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMessageInfoSerializer(im)readPrefixWithData:":{"name":"readPrefix(data:)","abstract":"<p>Read message info prefix from the given data, and if it is valid,","parent_name":"MessageInfoSerializer"},"Protocols/MessageInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMessageInfoSerializer(im)deserializeWithData:error:":{"name":"deserialize(data:)","abstract":"<p>Deserialize class <q>message info</q>.</p>","parent_name":"MessageInfoSerializer"},"Protocols/Mac.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMac(im)digestLen":{"name":"digestLen()","abstract":"<p>Size of the digest (mac output) in bytes.</p>","parent_name":"Mac"},"Protocols/Mac.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMac(im)macWithKey:data:":{"name":"mac(key:data:)","abstract":"<p>Calculate MAC over given data.</p>","parent_name":"Mac"},"Protocols/Mac.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMac(im)startWithKey:":{"name":"start(key:)","abstract":"<p>Start a new MAC.</p>","parent_name":"Mac"},"Protocols/Mac.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMac(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the MAC.</p>","parent_name":"Mac"},"Protocols/Mac.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMac(im)finish":{"name":"finish()","abstract":"<p>Accomplish MAC and return it&rsquo;s result (a message digest).</p>","parent_name":"Mac"},"Protocols/Mac.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFMac(im)reset":{"name":"reset()","abstract":"<p>Prepare to authenticate a new message with the same key","parent_name":"Mac"},"Protocols/KeySigner.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySigner(im)canSignWithPrivateKey:":{"name":"canSign(privateKey:)","abstract":"<p>Check if algorithm can sign data digest with a given key.</p>","parent_name":"KeySigner"},"Protocols/KeySigner.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySigner(im)signatureLenWithKey:":{"name":"signatureLen(key:)","abstract":"<p>Return length in bytes required to hold signature.","parent_name":"KeySigner"},"Protocols/KeySigner.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySigner(im)signHashWithPrivateKey:hashId:digest:error:":{"name":"signHash(privateKey:hashId:digest:)","abstract":"<p>Sign data digest with a given private key.</p>","parent_name":"KeySigner"},"Protocols/KeySigner.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySigner(im)canVerifyWithPublicKey:":{"name":"canVerify(publicKey:)","abstract":"<p>Check if algorithm can verify data digest with a given key.</p>","parent_name":"KeySigner"},"Protocols/KeySigner.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySigner(im)verifyHashWithPublicKey:hashId:digest:signature:":{"name":"verifyHash(publicKey:hashId:digest:signature:)","abstract":"<p>Verify data digest with a given public key and signature.</p>","parent_name":"KeySigner"},"Protocols/KeySerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySerializer(im)serializedPublicKeyLenWithPublicKey:":{"name":"serializedPublicKeyLen(publicKey:)","abstract":"<p>Calculate buffer size enough to hold serialized public key.</p>","parent_name":"KeySerializer"},"Protocols/KeySerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySerializer(im)serializePublicKeyWithPublicKey:error:":{"name":"serializePublicKey(publicKey:)","abstract":"<p>Serialize given public key to an interchangeable format.</p>","parent_name":"KeySerializer"},"Protocols/KeySerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySerializer(im)serializedPrivateKeyLenWithPrivateKey:":{"name":"serializedPrivateKeyLen(privateKey:)","abstract":"<p>Calculate buffer size enough to hold serialized private key.</p>","parent_name":"KeySerializer"},"Protocols/KeySerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeySerializer(im)serializePrivateKeyWithPrivateKey:error:":{"name":"serializePrivateKey(privateKey:)","abstract":"<p>Serialize given private key to an interchangeable format.</p>","parent_name":"KeySerializer"},"Protocols/KeyDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyDeserializer(im)deserializePublicKeyWithPublicKeyData:error:":{"name":"deserializePublicKey(publicKeyData:)","abstract":"<p>Deserialize given public key as an interchangeable format to the object.</p>","parent_name":"KeyDeserializer"},"Protocols/KeyDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyDeserializer(im)deserializePrivateKeyWithPrivateKeyData:error:":{"name":"deserializePrivateKey(privateKeyData:)","abstract":"<p>Deserialize given private key as an interchangeable format to the object.</p>","parent_name":"KeyDeserializer"},"Protocols/KeyCipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyCipher(im)canEncryptWithPublicKey:dataLen:":{"name":"canEncrypt(publicKey:dataLen:)","abstract":"<p>Check if algorithm can encrypt data with a given key.</p>","parent_name":"KeyCipher"},"Protocols/KeyCipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyCipher(im)encryptedLenWithPublicKey:dataLen:":{"name":"encryptedLen(publicKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"KeyCipher"},"Protocols/KeyCipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyCipher(im)encryptWithPublicKey:data:error:":{"name":"encrypt(publicKey:data:)","abstract":"<p>Encrypt data with a given public key.</p>","parent_name":"KeyCipher"},"Protocols/KeyCipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyCipher(im)canDecryptWithPrivateKey:dataLen:":{"name":"canDecrypt(privateKey:dataLen:)","abstract":"<p>Check if algorithm can decrypt data with a given key.","parent_name":"KeyCipher"},"Protocols/KeyCipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyCipher(im)decryptedLenWithPrivateKey:dataLen:":{"name":"decryptedLen(privateKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"KeyCipher"},"Protocols/KeyCipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyCipher(im)decryptWithPrivateKey:data:error:":{"name":"decrypt(privateKey:data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"KeyCipher"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(py)canImportPublicKey":{"name":"canImportPublicKey","abstract":"<p>Defines whether a public key can be imported or not.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(py)canExportPublicKey":{"name":"canExportPublicKey","abstract":"<p>Define whether a public key can be exported or not.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(py)canImportPrivateKey":{"name":"canImportPrivateKey","abstract":"<p>Define whether a private key can be imported or not.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(py)canExportPrivateKey":{"name":"canExportPrivateKey","abstract":"<p>Define whether a private key can be exported or not.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(im)generateEphemeralKeyWithKey:error:":{"name":"generateEphemeralKey(key:)","abstract":"<p>Generate ephemeral private key of the same type.","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(im)importPublicKeyWithRawKey:error:":{"name":"importPublicKey(rawKey:)","abstract":"<p>Import public key from the raw binary format.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(im)exportPublicKeyWithPublicKey:error:":{"name":"exportPublicKey(publicKey:)","abstract":"<p>Export public key to the raw binary format.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(im)importPrivateKeyWithRawKey:error:":{"name":"importPrivateKey(rawKey:)","abstract":"<p>Import private key from the raw binary format.</p>","parent_name":"KeyAlg"},"Protocols/KeyAlg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKeyAlg(im)exportPrivateKeyWithPrivateKey:error:":{"name":"exportPrivateKey(privateKey:)","abstract":"<p>Export private key in the raw binary format.</p>","parent_name":"KeyAlg"},"Protocols/Key.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"Key"},"Protocols/Key.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"Key"},"Protocols/Key.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"Key"},"Protocols/Key.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"Key"},"Protocols/Key.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"Key"},"Protocols/Kdf.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFKdf(im)deriveWithData:keyLen:":{"name":"derive(data:keyLen:)","abstract":"<p>Derive key of the requested length from the given data.</p>","parent_name":"Kdf"},"Protocols/Hash.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFHash(py)digestLen":{"name":"digestLen","abstract":"<p>Length of the digest (hashing output) in bytes.</p>","parent_name":"Hash"},"Protocols/Hash.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFHash(py)blockLen":{"name":"blockLen","abstract":"<p>Block length of the digest function in bytes.</p>","parent_name":"Hash"},"Protocols/Hash.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFHash(im)hashWithData:":{"name":"hash(data:)","abstract":"<p>Calculate hash over given data.</p>","parent_name":"Hash"},"Protocols/Hash.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFHash(im)start":{"name":"start()","abstract":"<p>Start a new hashing.</p>","parent_name":"Hash"},"Protocols/Hash.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFHash(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the hash.</p>","parent_name":"Hash"},"Protocols/Hash.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFHash(im)finish":{"name":"finish()","abstract":"<p>Accompilsh hashing and return it&rsquo;s result (a message digest).</p>","parent_name":"Hash"},"Protocols/EntropySource.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFEntropySource(im)isStrong":{"name":"isStrong()","abstract":"<p>Defines that implemented source is strong.</p>","parent_name":"EntropySource"},"Protocols/EntropySource.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFEntropySource(im)gatherWithLen:error:":{"name":"gather(len:)","abstract":"<p>Gather entropy of the requested length.</p>","parent_name":"EntropySource"},"Protocols/Encrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFEncrypt(im)encryptWithData:error:":{"name":"encrypt(data:)","abstract":"<p>Encrypt given data.</p>","parent_name":"Encrypt"},"Protocols/Encrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFEncrypt(im)encryptedLenWithDataLen:":{"name":"encryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Encrypt"},"Protocols/Decrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFDecrypt(im)decryptWithData:error:":{"name":"decrypt(data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Decrypt"},"Protocols/Decrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFDecrypt(im)decryptedLenWithDataLen:":{"name":"decryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Decrypt"},"Protocols/ComputeSharedKey.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFComputeSharedKey(im)computeSharedKeyWithPublicKey:privateKey:error:":{"name":"computeSharedKey(publicKey:privateKey:)","abstract":"<p>Compute shared key for 2 asymmetric keys.","parent_name":"ComputeSharedKey"},"Protocols/ComputeSharedKey.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFComputeSharedKey(im)sharedKeyLenWithKey:":{"name":"sharedKeyLen(key:)","abstract":"<p>Return number of bytes required to hold shared key.","parent_name":"ComputeSharedKey"},"Protocols/CipherInfo.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipherInfo(py)nonceLen":{"name":"nonceLen","abstract":"<p>Cipher nfonce length or IV length in bytes, or 0 if nonce is not required.</p>","parent_name":"CipherInfo"},"Protocols/CipherInfo.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipherInfo(py)keyLen":{"name":"keyLen","abstract":"<p>Cipher key length in bytes.</p>","parent_name":"CipherInfo"},"Protocols/CipherInfo.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipherInfo(py)keyBitlen":{"name":"keyBitlen","abstract":"<p>Cipher key length in bits.</p>","parent_name":"CipherInfo"},"Protocols/CipherInfo.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipherInfo(py)blockLen":{"name":"blockLen","abstract":"<p>Cipher block length in bytes.</p>","parent_name":"CipherInfo"},"Protocols/CipherAuthInfo.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipherAuthInfo(py)authTagLen":{"name":"authTagLen","abstract":"<p>Defines authentication tag length in bytes.</p>","parent_name":"CipherAuthInfo"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)setNonceWithNonce:":{"name":"setNonce(nonce:)","abstract":"<p>Setup IV or nonce.</p>","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)setKeyWithKey:":{"name":"setKey(key:)","abstract":"<p>Set cipher encryption / decryption key.</p>","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)startEncryption":{"name":"startEncryption()","abstract":"<p>Start sequential encryption.</p>","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)startDecryption":{"name":"startDecryption()","abstract":"<p>Start sequential decryption.</p>","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Process encryption or decryption of the given data chunk.</p>","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)outLenWithDataLen:":{"name":"outLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)encryptedOutLenWithDataLen:":{"name":"encryptedOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)decryptedOutLenWithDataLen:":{"name":"decryptedOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Cipher"},"Protocols/Cipher.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipher(im)finishAndReturnError:":{"name":"finish()","abstract":"<p>Accomplish encryption or decryption process.</p>","parent_name":"Cipher"},"Protocols/CContext.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCContext(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"CContext"},"Protocols/AuthEncrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAuthEncrypt(im)authEncryptWithData:authData:error:":{"name":"authEncrypt(data:authData:)","abstract":"<p>Encrypt given data.","parent_name":"AuthEncrypt"},"Protocols/AuthEncrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAuthEncrypt(im)authEncryptedLenWithDataLen:":{"name":"authEncryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the authenticated encrypted data.</p>","parent_name":"AuthEncrypt"},"Protocols/AuthDecrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAuthDecrypt(im)authDecryptWithData:authData:tag:error:":{"name":"authDecrypt(data:authData:tag:)","abstract":"<p>Decrypt given data.","parent_name":"AuthDecrypt"},"Protocols/AuthDecrypt.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAuthDecrypt(im)authDecryptedLenWithDataLen:":{"name":"authDecryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the authenticated decrypted data.</p>","parent_name":"AuthDecrypt"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)resetWithOut:outLen:":{"name":"reset(out:outLen:)","abstract":"<p>Reset all internal states and prepare to new ASN.1 writing operations.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)finishWithDoNotAdjust:":{"name":"finish(doNotAdjust:)","abstract":"<p>Finalize writing and forbid further operations.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)bytes":{"name":"bytes()","abstract":"<p>Returns pointer to the inner buffer.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)len":{"name":"len()","abstract":"<p>Returns total inner buffer length.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writtenLen":{"name":"writtenLen()","abstract":"<p>Returns how many bytes were already written to the ASN.1 structure.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)unwrittenLen":{"name":"unwrittenLen()","abstract":"<p>Returns how many bytes are available for writing.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)hasError":{"name":"hasError()","abstract":"<p>Return true if status is not <q>success</q>.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)statusAndReturnError:":{"name":"status()","abstract":"<p>Return error code.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)reserveWithLen:":{"name":"reserve(len:)","abstract":"<p>Move writing position backward for the given length.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeTagWithTag:":{"name":"writeTag(tag:)","abstract":"<p>Write ASN.1 tag.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeContextTagWithTag:len:":{"name":"writeContextTag(tag:len:)","abstract":"<p>Write context-specific ASN.1 tag.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeLenWithLen:":{"name":"writeLen(len:)","abstract":"<p>Write length of the following data.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeIntWithValue:":{"name":"writeInt(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeInt8WithValue:":{"name":"writeInt8(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeInt16WithValue:":{"name":"writeInt16(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeInt32WithValue:":{"name":"writeInt32(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeInt64WithValue:":{"name":"writeInt64(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeUintWithValue:":{"name":"writeUint(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeUint8WithValue:":{"name":"writeUint8(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeUint16WithValue:":{"name":"writeUint16(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeUint32WithValue:":{"name":"writeUint32(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeUint64WithValue:":{"name":"writeUint64(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeBoolWithValue:":{"name":"writeBool(value:)","abstract":"<p>Write ASN.1 type: BOOLEAN.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeNull":{"name":"writeNull()","abstract":"<p>Write ASN.1 type: NULL.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeOctetStrWithValue:":{"name":"writeOctetStr(value:)","abstract":"<p>Write ASN.1 type: OCTET STRING.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeOctetStrAsBitstringWithValue:":{"name":"writeOctetStrAsBitstring(value:)","abstract":"<p>Write ASN.1 type: BIT STRING with all zero unused bits.</p>","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeDataWithData:":{"name":"writeData(data:)","abstract":"<p>Write raw data directly to the ASN.1 structure.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeUtf8StrWithValue:":{"name":"writeUtf8Str(value:)","abstract":"<p>Write ASN.1 type: UTF8String.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeOidWithValue:":{"name":"writeOid(value:)","abstract":"<p>Write ASN.1 type: OID.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeSequenceWithLen:":{"name":"writeSequence(len:)","abstract":"<p>Mark previously written data of given length as ASN.1 type: SQUENCE.","parent_name":"Asn1Writer"},"Protocols/Asn1Writer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Writer(im)writeSetWithLen:":{"name":"writeSet(len:)","abstract":"<p>Mark previously written data of given length as ASN.1 type: SET.","parent_name":"Asn1Writer"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)resetWithData:":{"name":"reset(data:)","abstract":"<p>Reset all internal states and prepare to new ASN.1 reading operations.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)leftLen":{"name":"leftLen()","abstract":"<p>Return length in bytes how many bytes are left for reading.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)hasError":{"name":"hasError()","abstract":"<p>Return true if status is not <q>success</q>.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)statusAndReturnError:":{"name":"status()","abstract":"<p>Return error code.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)getTag":{"name":"getTag()","abstract":"<p>Get tag of the current ASN.1 element.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)getLen":{"name":"getLen()","abstract":"<p>Get length of the current ASN.1 element.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)getDataLen":{"name":"getDataLen()","abstract":"<p>Get length of the current ASN.1 element with tag and length itself.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readTagWithTag:":{"name":"readTag(tag:)","abstract":"<p>Read ASN.1 type: TAG.","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readContextTagWithTag:":{"name":"readContextTag(tag:)","abstract":"<p>Read ASN.1 type: context-specific TAG.","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readInt":{"name":"readInt()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readInt8":{"name":"readInt8()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readInt16":{"name":"readInt16()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readInt32":{"name":"readInt32()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readInt64":{"name":"readInt64()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readUint":{"name":"readUint()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readUint8":{"name":"readUint8()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readUint16":{"name":"readUint16()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readUint32":{"name":"readUint32()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readUint64":{"name":"readUint64()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readBool":{"name":"readBool()","abstract":"<p>Read ASN.1 type: BOOLEAN.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readNull":{"name":"readNull()","abstract":"<p>Read ASN.1 type: NULL.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readNullOptional":{"name":"readNullOptional()","abstract":"<p>Read ASN.1 type: NULL, only if it exists.","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readOctetStr":{"name":"readOctetStr()","abstract":"<p>Read ASN.1 type: OCTET STRING.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readBitstringAsOctetStr":{"name":"readBitstringAsOctetStr()","abstract":"<p>Read ASN.1 type: BIT STRING.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readUtf8Str":{"name":"readUtf8Str()","abstract":"<p>Read ASN.1 type: UTF8String.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readOid":{"name":"readOid()","abstract":"<p>Read ASN.1 type: OID.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readDataWithLen:":{"name":"readData(len:)","abstract":"<p>Read raw data of given length.</p>","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readSequence":{"name":"readSequence()","abstract":"<p>Read ASN.1 type: CONSTRUCTED | SEQUENCE.","parent_name":"Asn1Reader"},"Protocols/Asn1Reader.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAsn1Reader(im)readSet":{"name":"readSet()","abstract":"<p>Read ASN.1 type: CONSTRUCTED | SET.","parent_name":"Asn1Reader"},"Protocols/AlgInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlgInfoSerializer(im)serializedLenWithAlgInfo:":{"name":"serializedLen(algInfo:)","abstract":"<p>Return buffer size enough to hold serialized algorithm.</p>","parent_name":"AlgInfoSerializer"},"Protocols/AlgInfoSerializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlgInfoSerializer(im)serializeWithAlgInfo:":{"name":"serialize(algInfo:)","abstract":"<p>Serialize algorithm info to buffer class.</p>","parent_name":"AlgInfoSerializer"},"Protocols/AlgInfoDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlgInfoDeserializer(im)deserializeWithData:error:":{"name":"deserialize(data:)","abstract":"<p>Deserialize algorithm from the data.</p>","parent_name":"AlgInfoDeserializer"},"Protocols/AlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"AlgInfo"},"Protocols/Alg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlg(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Alg"},"Protocols/Alg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlg(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Alg"},"Protocols/Alg.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFAlg(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Alg"},"Protocols/Alg.html":{"name":"Alg","abstract":"<p>Provide interface to persist algorithm information and it parameters"},"Protocols/AlgInfo.html":{"name":"AlgInfo","abstract":"<p>Provide details about implemented algorithms.</p>"},"Protocols/AlgInfoDeserializer.html":{"name":"AlgInfoDeserializer","abstract":"<p>Provide algorithm deserialization.</p>"},"Protocols/AlgInfoSerializer.html":{"name":"AlgInfoSerializer","abstract":"<p>Provide serialization of algorithm</p>"},"Protocols/Asn1Reader.html":{"name":"Asn1Reader","abstract":"<p>Provides interface to the ASN.1 reader."},"Protocols/Asn1Writer.html":{"name":"Asn1Writer","abstract":"<p>Provides interface to the ASN.1 writer."},"Protocols/AuthDecrypt.html":{"name":"AuthDecrypt","abstract":"<p>Provide interface for data encryption.</p>"},"Protocols/AuthEncrypt.html":{"name":"AuthEncrypt","abstract":"<p>Provide interface for authenticated data encryption.</p>"},"Protocols/CContext.html":{"name":"CContext","abstract":"<p>Undocumented</p>"},"Protocols/Cipher.html":{"name":"Cipher","abstract":"<p>Provide interface for symmetric ciphers.</p>"},"Protocols.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFCipherAuth":{"name":"CipherAuth","abstract":"<p>Mix-in interface that provides specific functionality to authenticated"},"Protocols/CipherAuthInfo.html":{"name":"CipherAuthInfo","abstract":"<p>Undocumented</p>"},"Protocols/CipherInfo.html":{"name":"CipherInfo","abstract":"<p>Provides compile time knownledge about algorithm.</p>"},"Protocols/ComputeSharedKey.html":{"name":"ComputeSharedKey","abstract":"<p>Provide interface to compute shared key for 2 asymmetric keys.</p>"},"Protocols/Decrypt.html":{"name":"Decrypt","abstract":"<p>Provide interface for data encryption.</p>"},"Protocols/Encrypt.html":{"name":"Encrypt","abstract":"<p>Provide interface for data encryption.</p>"},"Protocols/EntropySource.html":{"name":"EntropySource","abstract":"<p>Defines generic interface for the entropy source.</p>"},"Protocols/Hash.html":{"name":"Hash","abstract":"<p>Provides interface to the hashing (messege digest) algorithms.</p>"},"Protocols/Kdf.html":{"name":"Kdf","abstract":"<p>Provides interface to the key derivation function (KDF) algorithms.</p>"},"Protocols/Key.html":{"name":"Key","abstract":"<p>Basic key type.</p>"},"Protocols/KeyAlg.html":{"name":"KeyAlg","abstract":"<p>Common information about asymmetric key algorithm.</p>"},"Protocols/KeyCipher.html":{"name":"KeyCipher","abstract":"<p>Provide data encryption and decryption interface with asymmetric keys.</p>"},"Protocols/KeyDeserializer.html":{"name":"KeyDeserializer","abstract":"<p>Public and private key deserialization from an interchangeable format.</p>"},"Protocols/KeySerializer.html":{"name":"KeySerializer","abstract":"<p>Public and private key serialization to an interchangeable format.</p>"},"Protocols/KeySigner.html":{"name":"KeySigner","abstract":"<p>Provide an interface for signing and verifying data digest"},"Protocols/Mac.html":{"name":"Mac","abstract":"<p>Provides interface to the stateless MAC (message authentication code) algorithms.</p>"},"Protocols/MessageInfoSerializer.html":{"name":"MessageInfoSerializer","abstract":"<p>Provide interface for <q>message info</q> class serialization.</p>"},"Protocols/PrivateKey.html":{"name":"PrivateKey","abstract":"<p>Contains private part of the key.</p>"},"Protocols.html#/c:@M@VirgilCryptoFoundation@objc(pl)VSCFPublicKey":{"name":"PublicKey","abstract":"<p>Contains public part of the key.</p>"},"Protocols/Random.html":{"name":"Random","abstract":"<p>Common interface to get random data.</p>"},"Protocols/SaltedKdf.html":{"name":"SaltedKdf","abstract":"<p>Provides interface to the key derivation function (KDF) algorithms"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdNone":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdRsa":{"name":"rsa","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdEd25519":{"name":"ed25519","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdCurve25519":{"name":"curve25519","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdSha224":{"name":"sha224","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdSha256":{"name":"sha256","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdSha384":{"name":"sha384","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdSha512":{"name":"sha512","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdKdf1":{"name":"kdf1","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdKdf2":{"name":"kdf2","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdAes256Gcm":{"name":"aes256Gcm","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdAes256Cbc":{"name":"aes256Cbc","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdPkcs5Pbkdf2":{"name":"pkcs5Pbkdf2","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdPkcs5Pbes2":{"name":"pkcs5Pbes2","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdCmsData":{"name":"cmsData","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdCmsEnvelopedData":{"name":"cmsEnvelopedData","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHkdfWithSha256":{"name":"hkdfWithSha256","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHkdfWithSha384":{"name":"hkdfWithSha384","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHkdfWithSha512":{"name":"hkdfWithSha512","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHmacWithSha224":{"name":"hmacWithSha224","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHmacWithSha256":{"name":"hmacWithSha256","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHmacWithSha384":{"name":"hmacWithSha384","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdHmacWithSha512":{"name":"hmacWithSha512","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdEcGenericKey":{"name":"ecGenericKey","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/OidId.html#/c:@M@VirgilCryptoFoundation@E@VSCFOidId@VSCFOidIdEcDomainSecp256r1":{"name":"ecDomainSecp256r1","abstract":"<p>Undocumented</p>","parent_name":"OidId"},"Enums/GroupMsgType.html#/c:@M@VirgilCryptoFoundation@E@VSCFGroupMsgType@VSCFGroupMsgTypeGroupInfo":{"name":"groupInfo","abstract":"<p>Group info type with encryption key.","parent_name":"GroupMsgType"},"Enums/GroupMsgType.html#/c:@M@VirgilCryptoFoundation@E@VSCFGroupMsgType@VSCFGroupMsgTypeRegular":{"name":"regular","abstract":"<p>Regular group message with encrypted text.</p>","parent_name":"GroupMsgType"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadArguments":{"name":"errorBadArguments","abstract":"<p>This error should not be returned if assertions is enabled.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorUninitialized":{"name":"errorUninitialized","abstract":"<p>Can be used to define that not all context prerequisites are satisfied.","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorUnhandledThirdpartyError":{"name":"errorUnhandledThirdpartyError","abstract":"<p>Define that error code from one of third-party module was not handled.","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorSmallBuffer":{"name":"errorSmallBuffer","abstract":"<p>Buffer capacity is not enough to hold result.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorUnsupportedAlgorithm":{"name":"errorUnsupportedAlgorithm","abstract":"<p>Unsupported algorithm.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorAuthFailed":{"name":"errorAuthFailed","abstract":"<p>Authentication failed during decryption.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorOutOfData":{"name":"errorOutOfData","abstract":"<p>Attempt to read data out of buffer bounds.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadAsn1":{"name":"errorBadAsn1","abstract":"<p>ASN.1 encoded data is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorAsn1LossyTypeNarrowing":{"name":"errorAsn1LossyTypeNarrowing","abstract":"<p>Attempt to read ASN.1 type that is bigger then requested C type.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadPkcs1PublicKey":{"name":"errorBadPkcs1PublicKey","abstract":"<p>ASN.1 representation of PKCS#1 public key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadPkcs1PrivateKey":{"name":"errorBadPkcs1PrivateKey","abstract":"<p>ASN.1 representation of PKCS#1 private key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadPkcs8PublicKey":{"name":"errorBadPkcs8PublicKey","abstract":"<p>ASN.1 representation of PKCS#8 public key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadPkcs8PrivateKey":{"name":"errorBadPkcs8PrivateKey","abstract":"<p>ASN.1 representation of PKCS#8 private key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadEncryptedData":{"name":"errorBadEncryptedData","abstract":"<p>Encrypted data is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorRandomFailed":{"name":"errorRandomFailed","abstract":"<p>Underlying random operation returns error.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorKeyGenerationFailed":{"name":"errorKeyGenerationFailed","abstract":"<p>Generation of the private or secret key failed.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorEntropySourceFailed":{"name":"errorEntropySourceFailed","abstract":"<p>One of the entropy sources failed.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorRngRequestedDataTooBig":{"name":"errorRngRequestedDataTooBig","abstract":"<p>Requested data to be generated is too big.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadBase64":{"name":"errorBadBase64","abstract":"<p>Base64 encoded string contains invalid characters.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadPem":{"name":"errorBadPem","abstract":"<p>PEM data is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorSharedKeyExchangeFailed":{"name":"errorSharedKeyExchangeFailed","abstract":"<p>Exchange key return zero.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadEd25519PublicKey":{"name":"errorBadEd25519PublicKey","abstract":"<p>Ed25519 public key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadEd25519PrivateKey":{"name":"errorBadEd25519PrivateKey","abstract":"<p>Ed25519 private key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadCurve25519PublicKey":{"name":"errorBadCurve25519PublicKey","abstract":"<p>CURVE25519 public key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadCurve25519PrivateKey":{"name":"errorBadCurve25519PrivateKey","abstract":"<p>CURVE25519 private key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadSec1PublicKey":{"name":"errorBadSec1PublicKey","abstract":"<p>Elliptic curve public key format is corrupted see RFC 5480.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadSec1PrivateKey":{"name":"errorBadSec1PrivateKey","abstract":"<p>Elliptic curve public key format is corrupted see RFC 5915.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadDerPublicKey":{"name":"errorBadDerPublicKey","abstract":"<p>ASN.1 representation of a public key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadDerPrivateKey":{"name":"errorBadDerPrivateKey","abstract":"<p>ASN.1 representation of a private key is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorMismatchPublicKeyAndAlgorithm":{"name":"errorMismatchPublicKeyAndAlgorithm","abstract":"<p>Key algorithm does not accept given type of public key.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorMismatchPrivateKeyAndAlgorithm":{"name":"errorMismatchPrivateKeyAndAlgorithm","abstract":"<p>Key algorithm does not accept given type of private key.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorNoMessageInfo":{"name":"errorNoMessageInfo","abstract":"<p>Decryption failed, because message info was not given explicitly,","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadMessageInfo":{"name":"errorBadMessageInfo","abstract":"<p>Message info is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorKeyRecipientIsNotFound":{"name":"errorKeyRecipientIsNotFound","abstract":"<p>Recipient defined with id is not found within message info","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorKeyRecipientPrivateKeyIsWrong":{"name":"errorKeyRecipientPrivateKeyIsWrong","abstract":"<p>Content encryption key can not be decrypted with a given private key.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorPasswordRecipientPasswordIsWrong":{"name":"errorPasswordRecipientPasswordIsWrong","abstract":"<p>Content encryption key can not be decrypted with a given password.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorMessageInfoCustomParamNotFound":{"name":"errorMessageInfoCustomParamNotFound","abstract":"<p>Custom parameter with a given key is not found within message info.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorMessageInfoCustomParamTypeMismatch":{"name":"errorMessageInfoCustomParamTypeMismatch","abstract":"<p>A custom parameter with a given key is found, but the requested value","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBadSignature":{"name":"errorBadSignature","abstract":"<p>Signature format is corrupted.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeyPasswordLen":{"name":"errorInvalidBrainkeyPasswordLen","abstract":"<p>Brainkey password length is out of range.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeyFactorLen":{"name":"errorInvalidBrainkeyFactorLen","abstract":"<p>Brainkey number length should be 32 byte.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeyPointLen":{"name":"errorInvalidBrainkeyPointLen","abstract":"<p>Brainkey point length should be 65 bytes.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeyKeyNameLen":{"name":"errorInvalidBrainkeyKeyNameLen","abstract":"<p>Brainkey name is out of range.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBrainkeyInternal":{"name":"errorBrainkeyInternal","abstract":"<p>Brainkey internal error.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorBrainkeyInvalidPoint":{"name":"errorBrainkeyInvalidPoint","abstract":"<p>Brainkey point is invalid.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeyFactorBufferLen":{"name":"errorInvalidBrainkeyFactorBufferLen","abstract":"<p>Brainkey number buffer length capacity should be &gt;= 32 byte.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeyPointBufferLen":{"name":"errorInvalidBrainkeyPointBufferLen","abstract":"<p>Brainkey point buffer length capacity should be &gt;= 32 byte.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidBrainkeySeedBufferLen":{"name":"errorInvalidBrainkeySeedBufferLen","abstract":"<p>Brainkey seed buffer length capacity should be &gt;= 32 byte.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidIdentitySecret":{"name":"errorInvalidIdentitySecret","abstract":"<p>Brainkey identity secret is invalid.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidPadding":{"name":"errorInvalidPadding","abstract":"<p>Invalid padding.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorProtobuf":{"name":"errorProtobuf","abstract":"<p>Protobuf error.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorSessionIdDoesntMatch":{"name":"errorSessionIdDoesntMatch","abstract":"<p>Session id doesnt match.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorEpochNotFound":{"name":"errorEpochNotFound","abstract":"<p>Epoch not found.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorWrongKeyType":{"name":"errorWrongKeyType","abstract":"<p>Wrong key type.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorInvalidSignature":{"name":"errorInvalidSignature","abstract":"<p>Invalid signature.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorEd25519":{"name":"errorEd25519","abstract":"<p>Ed25519 error.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorDuplicateEpoch":{"name":"errorDuplicateEpoch","abstract":"<p>Duplicate epoch.</p>","parent_name":"FoundationError"},"Enums/FoundationError.html#/c:@M@VirgilCryptoFoundation@E@VSCFFoundationError@VSCFFoundationErrorErrorPlainTextTooLong":{"name":"errorPlainTextTooLong","abstract":"<p>Plain text too long.</p>","parent_name":"FoundationError"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagBoolean":{"name":"boolean","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagInteger":{"name":"integer","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagBitString":{"name":"bitString","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagOctetString":{"name":"octetString","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagNull":{"name":"null","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagOid":{"name":"oid","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagUtf8String":{"name":"utf8String","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagSequence":{"name":"sequence","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagSet":{"name":"set","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagPrintableString":{"name":"printableString","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagT61String":{"name":"t61String","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagIa5String":{"name":"ia5String","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagUtcTime":{"name":"utcTime","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagGeneralizedTime":{"name":"generalizedTime","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagUniversalString":{"name":"universalString","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagBmpString":{"name":"bmpString","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagPrimitive":{"name":"primitive","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagConstructed":{"name":"constructed","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/Asn1Tag.html#/c:@M@VirgilCryptoFoundation@E@VSCFAsn1Tag@VSCFAsn1TagContextSpecific":{"name":"contextSpecific","abstract":"<p>Undocumented</p>","parent_name":"Asn1Tag"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdNone":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdSha224":{"name":"sha224","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdSha256":{"name":"sha256","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdSha384":{"name":"sha384","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdSha512":{"name":"sha512","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdKdf1":{"name":"kdf1","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdKdf2":{"name":"kdf2","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdRsa":{"name":"rsa","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdEcc":{"name":"ecc","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdEd25519":{"name":"ed25519","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdCurve25519":{"name":"curve25519","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdSecp256r1":{"name":"secp256r1","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdAes256Gcm":{"name":"aes256Gcm","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdAes256Cbc":{"name":"aes256Cbc","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdHmac":{"name":"hmac","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdHkdf":{"name":"hkdf","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdPkcs5Pbkdf2":{"name":"pkcs5Pbkdf2","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html#/c:@M@VirgilCryptoFoundation@E@VSCFAlgId@VSCFAlgIdPkcs5Pbes2":{"name":"pkcs5Pbes2","abstract":"<p>Undocumented</p>","parent_name":"AlgId"},"Enums/AlgId.html":{"name":"AlgId","abstract":"<p>Define implemented algorithm identificator.</p>"},"Enums/Asn1Tag.html":{"name":"Asn1Tag","abstract":"<p>ASN.1 constants.</p>"},"Enums/FoundationError.html":{"name":"FoundationError","abstract":"<p>Defines the library status codes.</p>"},"Enums/GroupMsgType.html":{"name":"GroupMsgType","abstract":"<p>Represents group message type</p>"},"Enums/OidId.html":{"name":"OidId","abstract":"<p>Undocumented</p>"},"Classes/Verifier.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFVerifier(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Verifier"},"Classes/Verifier.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFVerifier(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Verifier"},"Classes/Verifier.html#/s:22VirgilCryptoFoundation8VerifierC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Verifier"},"Classes/Verifier.html#/s:22VirgilCryptoFoundation8VerifierC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Verifier"},"Classes/Verifier.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFVerifier(im)resetWithSignature:error:":{"name":"reset(signature:)","abstract":"<p>Start verifying a signature.</p>","parent_name":"Verifier"},"Classes/Verifier.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFVerifier(im)appendDataWithData:":{"name":"appendData(data:)","abstract":"<p>Add given data to the signed data.</p>","parent_name":"Verifier"},"Classes/Verifier.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFVerifier(im)verifyWithPublicKey:":{"name":"verify(publicKey:)","abstract":"<p>Verify accumulated data.</p>","parent_name":"Verifier"},"Classes/SimpleAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSimpleAlgInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"SimpleAlgInfo"},"Classes/SimpleAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSimpleAlgInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"SimpleAlgInfo"},"Classes/SimpleAlgInfo.html#/s:22VirgilCryptoFoundation13SimpleAlgInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"SimpleAlgInfo"},"Classes/SimpleAlgInfo.html#/s:22VirgilCryptoFoundation13SimpleAlgInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"SimpleAlgInfo"},"Classes/SimpleAlgInfo.html#/s:22VirgilCryptoFoundation13SimpleAlgInfoC5algIdAcA0eH0O_tcfc":{"name":"init(algId:)","abstract":"<p>Create algorithm info with identificator.</p>","parent_name":"SimpleAlgInfo"},"Classes/SimpleAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSimpleAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"SimpleAlgInfo"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Signer"},"Classes/Signer.html#/s:22VirgilCryptoFoundation6SignerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Signer"},"Classes/Signer.html#/s:22VirgilCryptoFoundation6SignerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)setHashWithHash:":{"name":"setHash(hash:)","abstract":"<p>Undocumented</p>","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)reset":{"name":"reset()","abstract":"<p>Start a processing a new signature.</p>","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)appendDataWithData:":{"name":"appendData(data:)","abstract":"<p>Add given data to the signed data.</p>","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)signatureLenWithPrivateKey:":{"name":"signatureLen(privateKey:)","abstract":"<p>Return length of the signature.</p>","parent_name":"Signer"},"Classes/Signer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSigner(im)signWithPrivateKey:error:":{"name":"sign(privateKey:)","abstract":"<p>Accomplish signing and return signature.</p>","parent_name":"Signer"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(py)digestLen":{"name":"digestLen","abstract":"<p>Length of the digest (hashing output) in bytes.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(py)blockLen":{"name":"blockLen","abstract":"<p>Block length of the digest function in bytes.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/s:22VirgilCryptoFoundation6Sha512C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Sha512"},"Classes/Sha512.html#/s:22VirgilCryptoFoundation6Sha512C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)hashWithData:":{"name":"hash(data:)","abstract":"<p>Calculate hash over given data.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)start":{"name":"start()","abstract":"<p>Start a new hashing.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the hash.</p>","parent_name":"Sha512"},"Classes/Sha512.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha512(im)finish":{"name":"finish()","abstract":"<p>Accompilsh hashing and return it&rsquo;s result (a message digest).</p>","parent_name":"Sha512"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(py)digestLen":{"name":"digestLen","abstract":"<p>Length of the digest (hashing output) in bytes.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(py)blockLen":{"name":"blockLen","abstract":"<p>Block length of the digest function in bytes.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/s:22VirgilCryptoFoundation6Sha384C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Sha384"},"Classes/Sha384.html#/s:22VirgilCryptoFoundation6Sha384C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)hashWithData:":{"name":"hash(data:)","abstract":"<p>Calculate hash over given data.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)start":{"name":"start()","abstract":"<p>Start a new hashing.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the hash.</p>","parent_name":"Sha384"},"Classes/Sha384.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha384(im)finish":{"name":"finish()","abstract":"<p>Accompilsh hashing and return it&rsquo;s result (a message digest).</p>","parent_name":"Sha384"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(py)digestLen":{"name":"digestLen","abstract":"<p>Length of the digest (hashing output) in bytes.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(py)blockLen":{"name":"blockLen","abstract":"<p>Block length of the digest function in bytes.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/s:22VirgilCryptoFoundation6Sha256C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Sha256"},"Classes/Sha256.html#/s:22VirgilCryptoFoundation6Sha256C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)hashWithData:":{"name":"hash(data:)","abstract":"<p>Calculate hash over given data.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)start":{"name":"start()","abstract":"<p>Start a new hashing.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the hash.</p>","parent_name":"Sha256"},"Classes/Sha256.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha256(im)finish":{"name":"finish()","abstract":"<p>Accompilsh hashing and return it&rsquo;s result (a message digest).</p>","parent_name":"Sha256"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(py)digestLen":{"name":"digestLen","abstract":"<p>Length of the digest (hashing output) in bytes.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(py)blockLen":{"name":"blockLen","abstract":"<p>Block length of the digest function in bytes.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/s:22VirgilCryptoFoundation6Sha224C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Sha224"},"Classes/Sha224.html#/s:22VirgilCryptoFoundation6Sha224C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)hashWithData:":{"name":"hash(data:)","abstract":"<p>Calculate hash over given data.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)start":{"name":"start()","abstract":"<p>Start a new hashing.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the hash.</p>","parent_name":"Sha224"},"Classes/Sha224.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSha224(im)finish":{"name":"finish()","abstract":"<p>Accompilsh hashing and return it&rsquo;s result (a message digest).</p>","parent_name":"Sha224"},"Classes/SeedEntropySource.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSeedEntropySource(cpy)gatherLenMax":{"name":"gatherLenMax","abstract":"<p>The maximum length of the entropy requested at once.</p>","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSeedEntropySource(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSeedEntropySource(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/s:22VirgilCryptoFoundation17SeedEntropySourceC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/s:22VirgilCryptoFoundation17SeedEntropySourceC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSeedEntropySource(im)resetSeedWithSeed:":{"name":"resetSeed(seed:)","abstract":"<p>Set a new seed as an entropy source.</p>","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSeedEntropySource(im)isStrong":{"name":"isStrong()","abstract":"<p>Defines that implemented source is strong.</p>","parent_name":"SeedEntropySource"},"Classes/SeedEntropySource.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSeedEntropySource(im)gatherWithLen:error:":{"name":"gather(len:)","abstract":"<p>Gather entropy of the requested length.</p>","parent_name":"SeedEntropySource"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/s:22VirgilCryptoFoundation14Sec1SerializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/s:22VirgilCryptoFoundation14Sec1SerializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)setAsn1WriterWithAsn1Writer:":{"name":"setAsn1Writer(asn1Writer:)","abstract":"<p>Undocumented</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/s:22VirgilCryptoFoundation14Sec1SerializerC25serializePublicKeyInplace06publicH0SiAA03RawgH0C_tKF":{"name":"serializePublicKeyInplace(publicKey:)","abstract":"<p>Serialize Public Key by using internal ASN.1 writer.","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)serializePublicKeyInplaceWithPublicKey:error:":{"name":"serializePublicKeyInplace(publicKey:)","abstract":"<p>Serialize Public Key by using internal ASN.1 writer.","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/s:22VirgilCryptoFoundation14Sec1SerializerC26serializePrivateKeyInplace07privateH0SiAA03RawgH0C_tKF":{"name":"serializePrivateKeyInplace(privateKey:)","abstract":"<p>Serialize Private Key by using internal ASN.1 writer.","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)serializePrivateKeyInplaceWithPrivateKey:error:":{"name":"serializePrivateKeyInplace(privateKey:)","abstract":"<p>Serialize Private Key by using internal ASN.1 writer.","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)serializedPublicKeyLenWithPublicKey:":{"name":"serializedPublicKeyLen(publicKey:)","abstract":"<p>Calculate buffer size enough to hold serialized public key.</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)serializePublicKeyWithPublicKey:error:":{"name":"serializePublicKey(publicKey:)","abstract":"<p>Serialize given public key to an interchangeable format.</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)serializedPrivateKeyLenWithPrivateKey:":{"name":"serializedPrivateKeyLen(privateKey:)","abstract":"<p>Calculate buffer size enough to hold serialized private key.</p>","parent_name":"Sec1Serializer"},"Classes/Sec1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSec1Serializer(im)serializePrivateKeyWithPrivateKey:error:":{"name":"serializePrivateKey(privateKey:)","abstract":"<p>Serialize given private key to an interchangeable format.</p>","parent_name":"Sec1Serializer"},"Classes/SaltedKdfAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSaltedKdfAlgInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSaltedKdfAlgInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/s:22VirgilCryptoFoundation16SaltedKdfAlgInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/s:22VirgilCryptoFoundation16SaltedKdfAlgInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/s:22VirgilCryptoFoundation16SaltedKdfAlgInfoC5algId04hashfG04salt14iterationCountAcA0fI0O_AA0fG0_p0C04DataVSitcfc":{"name":"init(algId:hashAlgInfo:salt:iterationCount:)","abstract":"<p>Create algorithm info with identificator, HASH algorithm info,","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSaltedKdfAlgInfo(im)hashAlgInfo":{"name":"hashAlgInfo()","abstract":"<p>Return hash algorithm information.</p>","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSaltedKdfAlgInfo(im)salt":{"name":"salt()","abstract":"<p>Return KDF salt.</p>","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSaltedKdfAlgInfo(im)iterationCount":{"name":"iterationCount()","abstract":"<p>Return KDF iteration count.","parent_name":"SaltedKdfAlgInfo"},"Classes/SaltedKdfAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFSaltedKdfAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"SaltedKdfAlgInfo"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/s:22VirgilCryptoFoundation12RsaPublicKeyC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/s:22VirgilCryptoFoundation12RsaPublicKeyC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)keyExponent":{"name":"keyExponent()","abstract":"<p>Return public key exponent.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"RsaPublicKey"},"Classes/RsaPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPublicKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"RsaPublicKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/s:22VirgilCryptoFoundation13RsaPrivateKeyC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/s:22VirgilCryptoFoundation13RsaPrivateKeyC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"RsaPrivateKey"},"Classes/RsaPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsaPrivateKey(im)extractPublicKey":{"name":"extractPublicKey()","abstract":"<p>Extract public key from the private key.</p>","parent_name":"RsaPrivateKey"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(py)canImportPublicKey":{"name":"canImportPublicKey","abstract":"<p>Defines whether a public key can be imported or not.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(py)canExportPublicKey":{"name":"canExportPublicKey","abstract":"<p>Define whether a public key can be exported or not.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(py)canImportPrivateKey":{"name":"canImportPrivateKey","abstract":"<p>Define whether a private key can be imported or not.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(py)canExportPrivateKey":{"name":"canExportPrivateKey","abstract":"<p>Define whether a private key can be exported or not.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/s:22VirgilCryptoFoundation3RsaC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Rsa"},"Classes/Rsa.html#/s:22VirgilCryptoFoundation3RsaC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)generateKeyWithBitlen:error:":{"name":"generateKey(bitlen:)","abstract":"<p>Generate new private key.","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)generateEphemeralKeyWithKey:error:":{"name":"generateEphemeralKey(key:)","abstract":"<p>Generate ephemeral private key of the same type.","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)importPublicKeyWithRawKey:error:":{"name":"importPublicKey(rawKey:)","abstract":"<p>Import public key from the raw binary format.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)exportPublicKeyWithPublicKey:error:":{"name":"exportPublicKey(publicKey:)","abstract":"<p>Export public key to the raw binary format.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)importPrivateKeyWithRawKey:error:":{"name":"importPrivateKey(rawKey:)","abstract":"<p>Import private key from the raw binary format.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)exportPrivateKeyWithPrivateKey:error:":{"name":"exportPrivateKey(privateKey:)","abstract":"<p>Export private key in the raw binary format.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)canEncryptWithPublicKey:dataLen:":{"name":"canEncrypt(publicKey:dataLen:)","abstract":"<p>Check if algorithm can encrypt data with a given key.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)encryptedLenWithPublicKey:dataLen:":{"name":"encryptedLen(publicKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)encryptWithPublicKey:data:error:":{"name":"encrypt(publicKey:data:)","abstract":"<p>Encrypt data with a given public key.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)canDecryptWithPrivateKey:dataLen:":{"name":"canDecrypt(privateKey:dataLen:)","abstract":"<p>Check if algorithm can decrypt data with a given key.","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)decryptedLenWithPrivateKey:dataLen:":{"name":"decryptedLen(privateKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)decryptWithPrivateKey:data:error:":{"name":"decrypt(privateKey:data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)canSignWithPrivateKey:":{"name":"canSign(privateKey:)","abstract":"<p>Check if algorithm can sign data digest with a given key.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)signatureLenWithKey:":{"name":"signatureLen(key:)","abstract":"<p>Return length in bytes required to hold signature.","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)signHashWithPrivateKey:hashId:digest:error:":{"name":"signHash(privateKey:hashId:digest:)","abstract":"<p>Sign data digest with a given private key.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)canVerifyWithPublicKey:":{"name":"canVerify(publicKey:)","abstract":"<p>Check if algorithm can verify data digest with a given key.</p>","parent_name":"Rsa"},"Classes/Rsa.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRsa(im)verifyHashWithPublicKey:hashId:digest:signature:":{"name":"verifyHash(publicKey:hashId:digest:signature:)","abstract":"<p>Verify data digest with a given public key and signature.</p>","parent_name":"Rsa"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/s:22VirgilCryptoFoundation15RecipientCipherC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/s:22VirgilCryptoFoundation15RecipientCipherC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)setEncryptionCipherWithEncryptionCipher:":{"name":"setEncryptionCipher(encryptionCipher:)","abstract":"<p>Undocumented</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)addKeyRecipientWithRecipientId:publicKey:":{"name":"addKeyRecipient(recipientId:publicKey:)","abstract":"<p>Add recipient defined with id and public key.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)clearRecipients":{"name":"clearRecipients()","abstract":"<p>Remove all recipients.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)customParams":{"name":"customParams()","abstract":"<p>Provide access to the custom params object.","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)messageInfoLen":{"name":"messageInfoLen()","abstract":"<p>Return buffer length required to hold message info returned by the","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)startEncryptionAndReturnError:":{"name":"startEncryption()","abstract":"<p>Start encryption process.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)packMessageInfo":{"name":"packMessageInfo()","abstract":"<p>Return serialized message info to the buffer.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)encryptionOutLenWithDataLen:":{"name":"encryptionOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold output of the method","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)processEncryptionWithData:error:":{"name":"processEncryption(data:)","abstract":"<p>Process encryption of a new portion of data.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)finishEncryptionAndReturnError:":{"name":"finishEncryption()","abstract":"<p>Accomplish encryption.</p>","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)startDecryptionWithKeyWithRecipientId:privateKey:messageInfo:error:":{"name":"startDecryptionWithKey(recipientId:privateKey:messageInfo:)","abstract":"<p>Initiate decryption process with a recipient private key.","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)decryptionOutLenWithDataLen:":{"name":"decryptionOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold output of the method","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)processDecryptionWithData:error:":{"name":"processDecryption(data:)","abstract":"<p>Process with a new portion of data.","parent_name":"RecipientCipher"},"Classes/RecipientCipher.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRecipientCipher(im)finishDecryptionAndReturnError:":{"name":"finishDecryption()","abstract":"<p>Accomplish decryption.</p>","parent_name":"RecipientCipher"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/s:22VirgilCryptoFoundation12RawPublicKeyC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/s:22VirgilCryptoFoundation12RawPublicKeyC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)data":{"name":"data()","abstract":"<p>Return key data.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"RawPublicKey"},"Classes/RawPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPublicKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"RawPublicKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/s:22VirgilCryptoFoundation13RawPrivateKeyC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/s:22VirgilCryptoFoundation13RawPrivateKeyC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)data":{"name":"data()","abstract":"<p>Return key data.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)hasPublicKey":{"name":"hasPublicKey()","abstract":"<p>Return true if private key contains public key.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)setPublicKeyWithRawPublicKey:":{"name":"setPublicKey(rawPublicKey:)","abstract":"<p>Setup public key related to the private key.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)getPublicKey":{"name":"getPublicKey()","abstract":"<p>Return public key related to the private key.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"RawPrivateKey"},"Classes/RawPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFRawPrivateKey(im)extractPublicKey":{"name":"extractPublicKey()","abstract":"<p>Extract public key from the private key.</p>","parent_name":"RawPrivateKey"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/s:22VirgilCryptoFoundation15Pkcs8SerializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/s:22VirgilCryptoFoundation15Pkcs8SerializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)setAsn1WriterWithAsn1Writer:":{"name":"setAsn1Writer(asn1Writer:)","abstract":"<p>Undocumented</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/s:22VirgilCryptoFoundation15Pkcs8SerializerC25serializePublicKeyInplace06publicH0SiAA03RawgH0C_tKF":{"name":"serializePublicKeyInplace(publicKey:)","abstract":"<p>Serialize Public Key by using internal ASN.1 writer.","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)serializePublicKeyInplaceWithPublicKey:error:":{"name":"serializePublicKeyInplace(publicKey:)","abstract":"<p>Serialize Public Key by using internal ASN.1 writer.","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/s:22VirgilCryptoFoundation15Pkcs8SerializerC26serializePrivateKeyInplace07privateH0SiAA03RawgH0C_tKF":{"name":"serializePrivateKeyInplace(privateKey:)","abstract":"<p>Serialize Private Key by using internal ASN.1 writer.","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)serializePrivateKeyInplaceWithPrivateKey:error:":{"name":"serializePrivateKeyInplace(privateKey:)","abstract":"<p>Serialize Private Key by using internal ASN.1 writer.","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)serializedPublicKeyLenWithPublicKey:":{"name":"serializedPublicKeyLen(publicKey:)","abstract":"<p>Calculate buffer size enough to hold serialized public key.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)serializePublicKeyWithPublicKey:error:":{"name":"serializePublicKey(publicKey:)","abstract":"<p>Serialize given public key to an interchangeable format.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)serializedPrivateKeyLenWithPrivateKey:":{"name":"serializedPrivateKeyLen(privateKey:)","abstract":"<p>Calculate buffer size enough to hold serialized private key.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs8Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs8Serializer(im)serializePrivateKeyWithPrivateKey:error:":{"name":"serializePrivateKey(privateKey:)","abstract":"<p>Serialize given private key to an interchangeable format.</p>","parent_name":"Pkcs8Serializer"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/s:22VirgilCryptoFoundation11Pkcs5Pbkdf2C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/s:22VirgilCryptoFoundation11Pkcs5Pbkdf2C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)setHmacWithHmac:":{"name":"setHmac(hmac:)","abstract":"<p>Undocumented</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)deriveWithData:keyLen:":{"name":"derive(data:keyLen:)","abstract":"<p>Derive key of the requested length from the given data.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)resetWithSalt:iterationCount:":{"name":"reset(salt:iterationCount:)","abstract":"<p>Prepare algorithm to derive new key.</p>","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbkdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbkdf2(im)setInfoWithInfo:":{"name":"setInfo(info:)","abstract":"<p>Setup application specific information (optional).","parent_name":"Pkcs5Pbkdf2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/s:22VirgilCryptoFoundation10Pkcs5Pbes2C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/s:22VirgilCryptoFoundation10Pkcs5Pbes2C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)setKdfWithKdf:":{"name":"setKdf(kdf:)","abstract":"<p>Undocumented</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)setCipherWithCipher:":{"name":"setCipher(cipher:)","abstract":"<p>Undocumented</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)resetWithPwd:":{"name":"reset(pwd:)","abstract":"<p>Configure cipher with a new password.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)encryptWithData:error:":{"name":"encrypt(data:)","abstract":"<p>Encrypt given data.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)encryptedLenWithDataLen:":{"name":"encryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)decryptWithData:error:":{"name":"decrypt(data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pkcs5Pbes2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPkcs5Pbes2(im)decryptedLenWithDataLen:":{"name":"decryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Pkcs5Pbes2"},"Classes/Pem.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPem(cm)wrappedLenWithTitle:dataLen:":{"name":"wrappedLen(title:dataLen:)","abstract":"<p>Return length in bytes required to hold wrapped PEM format.</p>","parent_name":"Pem"},"Classes/Pem.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPem(cm)wrapWithTitle:data:":{"name":"wrap(title:data:)","abstract":"<p>Takes binary data and wraps it to the simple PEM format - no","parent_name":"Pem"},"Classes/Pem.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPem(cm)unwrappedLenWithPemLen:":{"name":"unwrappedLen(pemLen:)","abstract":"<p>Return length in bytes required to hold unwrapped binary.</p>","parent_name":"Pem"},"Classes/Pem.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPem(cm)unwrapWithPem:error:":{"name":"unwrap(pem:)","abstract":"<p>Takes PEM data and extract binary data from it.</p>","parent_name":"Pem"},"Classes/Pem.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPem(cm)titleWithPem:":{"name":"title(pem:)","abstract":"<p>Returns PEM title if PEM data is valid, otherwise - empty data.</p>","parent_name":"Pem"},"Classes/PbeAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPbeAlgInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPbeAlgInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/s:22VirgilCryptoFoundation10PbeAlgInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/s:22VirgilCryptoFoundation10PbeAlgInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/s:22VirgilCryptoFoundation10PbeAlgInfoC5algId03kdfeF006ciphereF0AcA0eH0O_AA0eF0_pAaI_ptcfc":{"name":"init(algId:kdfAlgInfo:cipherAlgInfo:)","abstract":"<p>Create algorithm info with identificator, KDF algorithm info and","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPbeAlgInfo(im)kdfAlgInfo":{"name":"kdfAlgInfo()","abstract":"<p>Return KDF algorithm information.</p>","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPbeAlgInfo(im)cipherAlgInfo":{"name":"cipherAlgInfo()","abstract":"<p>Return cipher algorithm information.</p>","parent_name":"PbeAlgInfo"},"Classes/PbeAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPbeAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"PbeAlgInfo"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/s:22VirgilCryptoFoundation25PasswordRecipientInfoListC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/s:22VirgilCryptoFoundation25PasswordRecipientInfoListC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)addWithPasswordRecipientInfo:":{"name":"add(passwordRecipientInfo:)","abstract":"<p>Add new item to the list.","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)hasItem":{"name":"hasItem()","abstract":"<p>Return true if given list has item.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)item":{"name":"item()","abstract":"<p>Return list item.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)hasNext":{"name":"hasNext()","abstract":"<p>Return true if list has next item.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)next":{"name":"next()","abstract":"<p>Return next list node if exists, or NULL otherwise.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)hasPrev":{"name":"hasPrev()","abstract":"<p>Return true if list has previous item.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)prev":{"name":"prev()","abstract":"<p>Return previous list node if exists, or NULL otherwise.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfoList(im)clear":{"name":"clear()","abstract":"<p>Remove all items.</p>","parent_name":"PasswordRecipientInfoList"},"Classes/PasswordRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"PasswordRecipientInfo"},"Classes/PasswordRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"PasswordRecipientInfo"},"Classes/PasswordRecipientInfo.html#/s:22VirgilCryptoFoundation21PasswordRecipientInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"PasswordRecipientInfo"},"Classes/PasswordRecipientInfo.html#/s:22VirgilCryptoFoundation21PasswordRecipientInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"PasswordRecipientInfo"},"Classes/PasswordRecipientInfo.html#/s:22VirgilCryptoFoundation21PasswordRecipientInfoC22keyEncryptionAlgorithm12encryptedKeyAcA03AlgF0_p_0C04DataVtcfc":{"name":"init(keyEncryptionAlgorithm:encryptedKey:)","abstract":"<p>Create object and define all properties.</p>","parent_name":"PasswordRecipientInfo"},"Classes/PasswordRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfo(im)keyEncryptionAlgorithm":{"name":"keyEncryptionAlgorithm()","abstract":"<p>Return algorithm information that was used for encryption","parent_name":"PasswordRecipientInfo"},"Classes/PasswordRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFPasswordRecipientInfo(im)encryptedKey":{"name":"encryptedKey()","abstract":"<p>Return an encrypted data encryption key.</p>","parent_name":"PasswordRecipientInfo"},"Classes/Oid.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFOid(cm)fromAlgIdWithAlgId:":{"name":"fromAlgId(algId:)","abstract":"<p>Return OID for given algorithm identifier.</p>","parent_name":"Oid"},"Classes/Oid.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFOid(cm)toAlgIdWithOid:":{"name":"toAlgId(oid:)","abstract":"<p>Return algorithm identifier for given OID.</p>","parent_name":"Oid"},"Classes/Oid.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFOid(cm)fromIdWithOidId:":{"name":"fromId(oidId:)","abstract":"<p>Return OID for a given identifier.</p>","parent_name":"Oid"},"Classes/Oid.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFOid(cm)toIdWithOid:":{"name":"toId(oid:)","abstract":"<p>Return identifier for a given OID.</p>","parent_name":"Oid"},"Classes/Oid.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFOid(cm)idToAlgIdWithOidId:":{"name":"idToAlgId(oidId:)","abstract":"<p>Map oid identifier to the algorithm identifier.</p>","parent_name":"Oid"},"Classes/Oid.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFOid(cm)equalWithLhs:rhs:":{"name":"equal(lhs:rhs:)","abstract":"<p>Return true if given OIDs are equal.</p>","parent_name":"Oid"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(py)prefixLen":{"name":"prefixLen","abstract":"<p>Undocumented</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/s:22VirgilCryptoFoundation24MessageInfoDerSerializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/s:22VirgilCryptoFoundation24MessageInfoDerSerializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)setAsn1ReaderWithAsn1Reader:":{"name":"setAsn1Reader(asn1Reader:)","abstract":"<p>Undocumented</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)setAsn1WriterWithAsn1Writer:":{"name":"setAsn1Writer(asn1Writer:)","abstract":"<p>Undocumented</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)serializedLenWithMessageInfo:":{"name":"serializedLen(messageInfo:)","abstract":"<p>Return buffer size enough to hold serialized message info.</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)serializeWithMessageInfo:":{"name":"serialize(messageInfo:)","abstract":"<p>Serialize class <q>message info</q>.</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)readPrefixWithData:":{"name":"readPrefix(data:)","abstract":"<p>Read message info prefix from the given data, and if it is valid,","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoDerSerializer(im)deserializeWithData:error:":{"name":"deserialize(data:)","abstract":"<p>Deserialize class <q>message info</q>.</p>","parent_name":"MessageInfoDerSerializer"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/s:22VirgilCryptoFoundation23MessageInfoCustomParamsC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/s:22VirgilCryptoFoundation23MessageInfoCustomParamsC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)addIntWithKey:value:":{"name":"addInt(key:value:)","abstract":"<p>Add custom parameter with integer value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)addStringWithKey:value:":{"name":"addString(key:value:)","abstract":"<p>Add custom parameter with UTF8 string value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)addDataWithKey:value:":{"name":"addData(key:value:)","abstract":"<p>Add custom parameter with octet string value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)clear":{"name":"clear()","abstract":"<p>Remove all parameters.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/s:22VirgilCryptoFoundation23MessageInfoCustomParamsC7findInt3keys5Int32V0C04DataV_tKF":{"name":"findInt(key:)","abstract":"<p>Return custom parameter with integer value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)findIntWithKey:error:":{"name":"findInt(key:)","abstract":"<p>Return custom parameter with integer value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)findStringWithKey:error:":{"name":"findString(key:)","abstract":"<p>Return custom parameter with UTF8 string value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfoCustomParams.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfoCustomParams(im)findDataWithKey:error:":{"name":"findData(key:)","abstract":"<p>Return custom parameter with octet string value.</p>","parent_name":"MessageInfoCustomParams"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/s:22VirgilCryptoFoundation11MessageInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/s:22VirgilCryptoFoundation11MessageInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)addKeyRecipientWithKeyRecipient:":{"name":"addKeyRecipient(keyRecipient:)","abstract":"<p>Add recipient that is defined by Public Key.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)addPasswordRecipientWithPasswordRecipient:":{"name":"addPasswordRecipient(passwordRecipient:)","abstract":"<p>Add recipient that is defined by password.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)setDataEncryptionAlgInfoWithDataEncryptionAlgInfo:":{"name":"setDataEncryptionAlgInfo(dataEncryptionAlgInfo:)","abstract":"<p>Set information about algorithm that was used for data encryption.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)dataEncryptionAlgInfo":{"name":"dataEncryptionAlgInfo()","abstract":"<p>Return information about algorithm that was used for the data encryption.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)keyRecipientInfoList":{"name":"keyRecipientInfoList()","abstract":"<p>Return list with a <q>key recipient info</q> elements.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)passwordRecipientInfoList":{"name":"passwordRecipientInfoList()","abstract":"<p>Return list with a <q>password recipient info</q> elements.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)setCustomParamsWithCustomParams:":{"name":"setCustomParams(customParams:)","abstract":"<p>Setup custom params.</p>","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)customParams":{"name":"customParams()","abstract":"<p>Provide access to the custom params object.","parent_name":"MessageInfo"},"Classes/MessageInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFMessageInfo(im)clearRecipients":{"name":"clearRecipients()","abstract":"<p>Remove all recipients.</p>","parent_name":"MessageInfo"},"Classes/ListKeyValueNode.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFListKeyValueNode(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"ListKeyValueNode"},"Classes/ListKeyValueNode.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFListKeyValueNode(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"ListKeyValueNode"},"Classes/ListKeyValueNode.html#/s:22VirgilCryptoFoundation16ListKeyValueNodeC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"ListKeyValueNode"},"Classes/ListKeyValueNode.html#/s:22VirgilCryptoFoundation16ListKeyValueNodeC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"ListKeyValueNode"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/s:22VirgilCryptoFoundation20KeyRecipientInfoListC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/s:22VirgilCryptoFoundation20KeyRecipientInfoListC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)addWithKeyRecipientInfo:":{"name":"add(keyRecipientInfo:)","abstract":"<p>Add new item to the list.","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)hasItem":{"name":"hasItem()","abstract":"<p>Return true if given list has item.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)item":{"name":"item()","abstract":"<p>Return list item.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)hasNext":{"name":"hasNext()","abstract":"<p>Return true if list has next item.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)next":{"name":"next()","abstract":"<p>Return next list node if exists, or NULL otherwise.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)hasPrev":{"name":"hasPrev()","abstract":"<p>Return true if list has previous item.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)prev":{"name":"prev()","abstract":"<p>Return previous list node if exists, or NULL otherwise.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfoList.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfoList(im)clear":{"name":"clear()","abstract":"<p>Remove all items.</p>","parent_name":"KeyRecipientInfoList"},"Classes/KeyRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/s:22VirgilCryptoFoundation16KeyRecipientInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/s:22VirgilCryptoFoundation16KeyRecipientInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/s:22VirgilCryptoFoundation16KeyRecipientInfoC11recipientId22keyEncryptionAlgorithm09encryptedD0AC0C04DataV_AA03AlgF0_pAItcfc":{"name":"init(recipientId:keyEncryptionAlgorithm:encryptedKey:)","abstract":"<p>Create object and define all properties.</p>","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfo(im)recipientId":{"name":"recipientId()","abstract":"<p>Return recipient identifier.</p>","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfo(im)keyEncryptionAlgorithm":{"name":"keyEncryptionAlgorithm()","abstract":"<p>Return algorithm information that was used for encryption","parent_name":"KeyRecipientInfo"},"Classes/KeyRecipientInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyRecipientInfo(im)encryptedKey":{"name":"encryptedKey()","abstract":"<p>Return an encrypted data encryption key.</p>","parent_name":"KeyRecipientInfo"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/s:22VirgilCryptoFoundation11KeyProviderC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/s:22VirgilCryptoFoundation11KeyProviderC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)setEciesWithEcies:":{"name":"setEcies(ecies:)","abstract":"<p>Undocumented</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)setRsaParamsWithBitlen:":{"name":"setRsaParams(bitlen:)","abstract":"<p>Setup parameters that is used during RSA key generation.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)generatePrivateKeyWithAlgId:error:":{"name":"generatePrivateKey(algId:)","abstract":"<p>Generate new private key from the given id.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)importPrivateKeyWithKeyData:error:":{"name":"importPrivateKey(keyData:)","abstract":"<p>Import private key from the PKCS#8 format.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)importPublicKeyWithKeyData:error:":{"name":"importPublicKey(keyData:)","abstract":"<p>Import public key from the PKCS#8 format.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)exportedPublicKeyLenWithPublicKey:":{"name":"exportedPublicKeyLen(publicKey:)","abstract":"<p>Calculate buffer size enough to hold exported public key.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)exportPublicKeyWithPublicKey:error:":{"name":"exportPublicKey(publicKey:)","abstract":"<p>Export given public key to the PKCS#8 DER format.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)exportedPrivateKeyLenWithPrivateKey:":{"name":"exportedPrivateKeyLen(privateKey:)","abstract":"<p>Calculate buffer size enough to hold exported private key.</p>","parent_name":"KeyProvider"},"Classes/KeyProvider.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyProvider(im)exportPrivateKeyWithPrivateKey:error:":{"name":"exportPrivateKey(privateKey:)","abstract":"<p>Export given private key to the PKCS#8 or SEC1 DER format.</p>","parent_name":"KeyProvider"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(cpy)keyMaterialLenMin":{"name":"keyMaterialLenMin","abstract":"<p>Minimum length in bytes for the key material.</p>","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(cpy)keyMaterialLenMax":{"name":"keyMaterialLenMax","abstract":"<p>Maximum length in bytes for the key material.</p>","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/s:22VirgilCryptoFoundation14KeyMaterialRngC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/s:22VirgilCryptoFoundation14KeyMaterialRngC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(im)resetKeyMaterialWithKeyMaterial:":{"name":"resetKeyMaterial(keyMaterial:)","abstract":"<p>Set a new key material.</p>","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(im)randomWithDataLen:error:":{"name":"random(dataLen:)","abstract":"<p>Generate random bytes.","parent_name":"KeyMaterialRng"},"Classes/KeyMaterialRng.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyMaterialRng(im)reseedAndReturnError:":{"name":"reseed()","abstract":"<p>Retrieve new seed data from the entropy sources.</p>","parent_name":"KeyMaterialRng"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/s:22VirgilCryptoFoundation17KeyAsn1SerializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/s:22VirgilCryptoFoundation17KeyAsn1SerializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)setAsn1WriterWithAsn1Writer:":{"name":"setAsn1Writer(asn1Writer:)","abstract":"<p>Undocumented</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/s:22VirgilCryptoFoundation17KeyAsn1SerializerC015serializePublicD7Inplace06publicD0SiAA03RawhD0C_tKF":{"name":"serializePublicKeyInplace(publicKey:)","abstract":"<p>Serialize Public Key by using internal ASN.1 writer.","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)serializePublicKeyInplaceWithPublicKey:error:":{"name":"serializePublicKeyInplace(publicKey:)","abstract":"<p>Serialize Public Key by using internal ASN.1 writer.","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/s:22VirgilCryptoFoundation17KeyAsn1SerializerC016serializePrivateD7Inplace07privateD0SiAA03RawhD0C_tKF":{"name":"serializePrivateKeyInplace(privateKey:)","abstract":"<p>Serialize Private Key by using internal ASN.1 writer.","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)serializePrivateKeyInplaceWithPrivateKey:error:":{"name":"serializePrivateKeyInplace(privateKey:)","abstract":"<p>Serialize Private Key by using internal ASN.1 writer.","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)serializedPublicKeyLenWithPublicKey:":{"name":"serializedPublicKeyLen(publicKey:)","abstract":"<p>Calculate buffer size enough to hold serialized public key.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)serializePublicKeyWithPublicKey:error:":{"name":"serializePublicKey(publicKey:)","abstract":"<p>Serialize given public key to an interchangeable format.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)serializedPrivateKeyLenWithPrivateKey:":{"name":"serializedPrivateKeyLen(privateKey:)","abstract":"<p>Calculate buffer size enough to hold serialized private key.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Serializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Serializer(im)serializePrivateKeyWithPrivateKey:error:":{"name":"serializePrivateKey(privateKey:)","abstract":"<p>Serialize given private key to an interchangeable format.</p>","parent_name":"KeyAsn1Serializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/s:22VirgilCryptoFoundation19KeyAsn1DeserializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/s:22VirgilCryptoFoundation19KeyAsn1DeserializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)setAsn1ReaderWithAsn1Reader:":{"name":"setAsn1Reader(asn1Reader:)","abstract":"<p>Undocumented</p>","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)deserializePublicKeyInplaceAndReturnError:":{"name":"deserializePublicKeyInplace()","abstract":"<p>Deserialize Public Key by using internal ASN.1 reader.","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)deserializePrivateKeyInplaceAndReturnError:":{"name":"deserializePrivateKeyInplace()","abstract":"<p>Deserialize Private Key by using internal ASN.1 reader.","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)deserializePublicKeyWithPublicKeyData:error:":{"name":"deserializePublicKey(publicKeyData:)","abstract":"<p>Deserialize given public key as an interchangeable format to the object.</p>","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAsn1Deserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAsn1Deserializer(im)deserializePrivateKeyWithPrivateKeyData:error:":{"name":"deserializePrivateKey(privateKeyData:)","abstract":"<p>Deserialize given private key as an interchangeable format to the object.</p>","parent_name":"KeyAsn1Deserializer"},"Classes/KeyAlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAlgFactory(cm)createFromAlgIdWithAlgId:random:error:":{"name":"createFromAlgId(algId:random:)","abstract":"<p>Create a key algorithm based on an identifier.</p>","parent_name":"KeyAlgFactory"},"Classes/KeyAlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAlgFactory(cm)createFromKeyWithKey:random:error:":{"name":"createFromKey(key:random:)","abstract":"<p>Create a key algorithm correspond to a specific key.</p>","parent_name":"KeyAlgFactory"},"Classes/KeyAlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAlgFactory(cm)createFromRawPublicKeyWithPublicKey:random:error:":{"name":"createFromRawPublicKey(publicKey:random:)","abstract":"<p>Create a key algorithm that can import <q>raw public key</q>.</p>","parent_name":"KeyAlgFactory"},"Classes/KeyAlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKeyAlgFactory(cm)createFromRawPrivateKeyWithPrivateKey:random:error:":{"name":"createFromRawPrivateKey(privateKey:random:)","abstract":"<p>Create a key algorithm that can import <q>raw private key</q>.</p>","parent_name":"KeyAlgFactory"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Kdf2"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Kdf2"},"Classes/Kdf2.html#/s:22VirgilCryptoFoundation4Kdf2C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Kdf2"},"Classes/Kdf2.html#/s:22VirgilCryptoFoundation4Kdf2C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Kdf2"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(im)setHashWithHash:":{"name":"setHash(hash:)","abstract":"<p>Undocumented</p>","parent_name":"Kdf2"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Kdf2"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Kdf2"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Kdf2"},"Classes/Kdf2.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf2(im)deriveWithData:keyLen:":{"name":"derive(data:keyLen:)","abstract":"<p>Derive key of the requested length from the given data.</p>","parent_name":"Kdf2"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Kdf1"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Kdf1"},"Classes/Kdf1.html#/s:22VirgilCryptoFoundation4Kdf1C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Kdf1"},"Classes/Kdf1.html#/s:22VirgilCryptoFoundation4Kdf1C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Kdf1"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(im)setHashWithHash:":{"name":"setHash(hash:)","abstract":"<p>Undocumented</p>","parent_name":"Kdf1"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Kdf1"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Kdf1"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Kdf1"},"Classes/Kdf1.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFKdf1(im)deriveWithData:keyLen:":{"name":"derive(data:keyLen:)","abstract":"<p>Derive key of the requested length from the given data.</p>","parent_name":"Kdf1"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/s:22VirgilCryptoFoundation4HmacC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Hmac"},"Classes/Hmac.html#/s:22VirgilCryptoFoundation4HmacC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)setHashWithHash:":{"name":"setHash(hash:)","abstract":"<p>Undocumented</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)digestLen":{"name":"digestLen()","abstract":"<p>Size of the digest (mac output) in bytes.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)macWithKey:data:":{"name":"mac(key:data:)","abstract":"<p>Calculate MAC over given data.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)startWithKey:":{"name":"start(key:)","abstract":"<p>Start a new MAC.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Add given data to the MAC.</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)finish":{"name":"finish()","abstract":"<p>Accomplish MAC and return it&rsquo;s result (a message digest).</p>","parent_name":"Hmac"},"Classes/Hmac.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHmac(im)reset":{"name":"reset()","abstract":"<p>Prepare to authenticate a new message with the same key","parent_name":"Hmac"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(cpy)hashCounterMax":{"name":"hashCounterMax","abstract":"<p>Undocumented</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/s:22VirgilCryptoFoundation4HkdfC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Hkdf"},"Classes/Hkdf.html#/s:22VirgilCryptoFoundation4HkdfC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)setHashWithHash:":{"name":"setHash(hash:)","abstract":"<p>Undocumented</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)deriveWithData:keyLen:":{"name":"derive(data:keyLen:)","abstract":"<p>Derive key of the requested length from the given data.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)resetWithSalt:iterationCount:":{"name":"reset(salt:iterationCount:)","abstract":"<p>Prepare algorithm to derive new key.</p>","parent_name":"Hkdf"},"Classes/Hkdf.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHkdf(im)setInfoWithInfo:":{"name":"setInfo(info:)","abstract":"<p>Setup application specific information (optional).","parent_name":"Hkdf"},"Classes/HashBasedAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHashBasedAlgInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"HashBasedAlgInfo"},"Classes/HashBasedAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHashBasedAlgInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"HashBasedAlgInfo"},"Classes/HashBasedAlgInfo.html#/s:22VirgilCryptoFoundation16HashBasedAlgInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"HashBasedAlgInfo"},"Classes/HashBasedAlgInfo.html#/s:22VirgilCryptoFoundation16HashBasedAlgInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"HashBasedAlgInfo"},"Classes/HashBasedAlgInfo.html#/s:22VirgilCryptoFoundation16HashBasedAlgInfoC5algId04hashfG0AcA0fI0O_AA0fG0_ptcfc":{"name":"init(algId:hashAlgInfo:)","abstract":"<p>Create algorithm info with identificator and HASH algorithm info.</p>","parent_name":"HashBasedAlgInfo"},"Classes/HashBasedAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHashBasedAlgInfo(im)hashAlgInfo":{"name":"hashAlgInfo()","abstract":"<p>Return hash algorithm information.</p>","parent_name":"HashBasedAlgInfo"},"Classes/HashBasedAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFHashBasedAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"HashBasedAlgInfo"},"Classes/GroupSessionTicket.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionTicket(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionTicket(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/s:22VirgilCryptoFoundation18GroupSessionTicketC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/s:22VirgilCryptoFoundation18GroupSessionTicketC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionTicket(im)setRngWithRng:":{"name":"setRng(rng:)","abstract":"<p>Random used to generate keys</p>","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionTicket(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setups default dependencies:</p>","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionTicket(im)setupTicketAsNewWithSessionId:error:":{"name":"setupTicketAsNew(sessionId:)","abstract":"<p>Set this ticket to start new group session.</p>","parent_name":"GroupSessionTicket"},"Classes/GroupSessionTicket.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionTicket(im)getTicketMessage":{"name":"getTicketMessage()","abstract":"<p>Returns message that should be sent to all participants using secure channel.</p>","parent_name":"GroupSessionTicket"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(cpy)maxMessageLen":{"name":"maxMessageLen","abstract":"<p>Max message len</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(cpy)messageVersion":{"name":"messageVersion","abstract":"<p>Message version</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/s:22VirgilCryptoFoundation19GroupSessionMessageC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/s:22VirgilCryptoFoundation19GroupSessionMessageC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)getType":{"name":"getType()","abstract":"<p>Returns message type.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)getSessionId":{"name":"getSessionId()","abstract":"<p>Returns session id.","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)getSenderId":{"name":"getSenderId()","abstract":"<p>Returns message sender id.","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)getEpoch":{"name":"getEpoch()","abstract":"<p>Returns message epoch.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)serializeLen":{"name":"serializeLen()","abstract":"<p>Buffer len to serialize this class.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(im)serialize":{"name":"serialize()","abstract":"<p>Serializes instance.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSessionMessage.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSessionMessage(cm)deserializeWithInput:error:":{"name":"deserialize(input:)","abstract":"<p>Deserializes instance.</p>","parent_name":"GroupSessionMessage"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(cpy)senderIdLen":{"name":"senderIdLen","abstract":"<p>Sender id len</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(cpy)maxPlainTextLen":{"name":"maxPlainTextLen","abstract":"<p>Max plain text len</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(cpy)maxEpochsCount":{"name":"maxEpochsCount","abstract":"<p>Max epochs count</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(cpy)saltSize":{"name":"saltSize","abstract":"<p>Salt size</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/s:22VirgilCryptoFoundation12GroupSessionC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"GroupSession"},"Classes/GroupSession.html#/s:22VirgilCryptoFoundation12GroupSessionC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)setRngWithRng:":{"name":"setRng(rng:)","abstract":"<p>Random</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)getCurrentEpoch":{"name":"getCurrentEpoch()","abstract":"<p>Returns current epoch.</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setups default dependencies:</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)getSessionId":{"name":"getSessionId()","abstract":"<p>Returns session id.</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)addEpochWithMessage:error:":{"name":"addEpoch(message:)","abstract":"<p>Adds epoch. New epoch should be generated for member removal or proactive to rotate encryption key.","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)encryptWithPlainText:privateKey:senderId:error:":{"name":"encrypt(plainText:privateKey:senderId:)","abstract":"<p>Encrypts data</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)decryptLenWithMessage:":{"name":"decryptLen(message:)","abstract":"<p>Calculates size of buffer sufficient to store decrypted message</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)decryptWithMessage:publicKey:senderId:error:":{"name":"decrypt(message:publicKey:senderId:)","abstract":"<p>Decrypts message</p>","parent_name":"GroupSession"},"Classes/GroupSession.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFGroupSession(im)createGroupTicketAndReturnError:":{"name":"createGroupTicket()","abstract":"<p>Creates ticket with new key for removing participants or proactive to rotate encryption key.</p>","parent_name":"GroupSession"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/s:22VirgilCryptoFoundation10FakeRandomC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/s:22VirgilCryptoFoundation10FakeRandomC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)setupSourceByteWithByteSource:":{"name":"setupSourceByte(byteSource:)","abstract":"<p>Configure random number generator to generate sequence filled with given byte.</p>","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)setupSourceDataWithDataSource:":{"name":"setupSourceData(dataSource:)","abstract":"<p>Configure random number generator to generate random sequence from given data.","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)randomWithDataLen:error:":{"name":"random(dataLen:)","abstract":"<p>Generate random bytes.","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)reseedAndReturnError:":{"name":"reseed()","abstract":"<p>Retrieve new seed data from the entropy sources.</p>","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)isStrong":{"name":"isStrong()","abstract":"<p>Defines that implemented source is strong.</p>","parent_name":"FakeRandom"},"Classes/FakeRandom.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFakeRandom(im)gatherWithLen:error:":{"name":"gather(len:)","abstract":"<p>Gather entropy of the requested length.</p>","parent_name":"FakeRandom"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(cpy)sourcesMax":{"name":"sourcesMax","abstract":"<p>Undocumented</p>","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/s:22VirgilCryptoFoundation18EntropyAccumulatorC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/s:22VirgilCryptoFoundation18EntropyAccumulatorC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(im)addSourceWithSource:threshold:":{"name":"addSource(source:threshold:)","abstract":"<p>Add given entropy source to the accumulator.","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(im)isStrong":{"name":"isStrong()","abstract":"<p>Defines that implemented source is strong.</p>","parent_name":"EntropyAccumulator"},"Classes/EntropyAccumulator.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEntropyAccumulator(im)gatherWithLen:error:":{"name":"gather(len:)","abstract":"<p>Gather entropy of the requested length.</p>","parent_name":"EntropyAccumulator"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(py)canImportPublicKey":{"name":"canImportPublicKey","abstract":"<p>Defines whether a public key can be imported or not.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(py)canExportPublicKey":{"name":"canExportPublicKey","abstract":"<p>Define whether a public key can be exported or not.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(py)canImportPrivateKey":{"name":"canImportPrivateKey","abstract":"<p>Define whether a private key can be imported or not.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(py)canExportPrivateKey":{"name":"canExportPrivateKey","abstract":"<p>Define whether a private key can be exported or not.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/s:22VirgilCryptoFoundation7Ed25519C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Ed25519"},"Classes/Ed25519.html#/s:22VirgilCryptoFoundation7Ed25519C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)setEciesWithEcies:":{"name":"setEcies(ecies:)","abstract":"<p>Undocumented</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)generateKeyAndReturnError:":{"name":"generateKey()","abstract":"<p>Generate new private key.","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)generateEphemeralKeyWithKey:error:":{"name":"generateEphemeralKey(key:)","abstract":"<p>Generate ephemeral private key of the same type.","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)importPublicKeyWithRawKey:error:":{"name":"importPublicKey(rawKey:)","abstract":"<p>Import public key from the raw binary format.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)exportPublicKeyWithPublicKey:error:":{"name":"exportPublicKey(publicKey:)","abstract":"<p>Export public key to the raw binary format.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)importPrivateKeyWithRawKey:error:":{"name":"importPrivateKey(rawKey:)","abstract":"<p>Import private key from the raw binary format.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)exportPrivateKeyWithPrivateKey:error:":{"name":"exportPrivateKey(privateKey:)","abstract":"<p>Export private key in the raw binary format.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)canEncryptWithPublicKey:dataLen:":{"name":"canEncrypt(publicKey:dataLen:)","abstract":"<p>Check if algorithm can encrypt data with a given key.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)encryptedLenWithPublicKey:dataLen:":{"name":"encryptedLen(publicKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)encryptWithPublicKey:data:error:":{"name":"encrypt(publicKey:data:)","abstract":"<p>Encrypt data with a given public key.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)canDecryptWithPrivateKey:dataLen:":{"name":"canDecrypt(privateKey:dataLen:)","abstract":"<p>Check if algorithm can decrypt data with a given key.","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)decryptedLenWithPrivateKey:dataLen:":{"name":"decryptedLen(privateKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)decryptWithPrivateKey:data:error:":{"name":"decrypt(privateKey:data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)canSignWithPrivateKey:":{"name":"canSign(privateKey:)","abstract":"<p>Check if algorithm can sign data digest with a given key.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)signatureLenWithKey:":{"name":"signatureLen(key:)","abstract":"<p>Return length in bytes required to hold signature.","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)signHashWithPrivateKey:hashId:digest:error:":{"name":"signHash(privateKey:hashId:digest:)","abstract":"<p>Sign data digest with a given private key.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)canVerifyWithPublicKey:":{"name":"canVerify(publicKey:)","abstract":"<p>Check if algorithm can verify data digest with a given key.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)verifyHashWithPublicKey:hashId:digest:signature:":{"name":"verifyHash(publicKey:hashId:digest:signature:)","abstract":"<p>Verify data digest with a given public key and signature.</p>","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)computeSharedKeyWithPublicKey:privateKey:error:":{"name":"computeSharedKey(publicKey:privateKey:)","abstract":"<p>Compute shared key for 2 asymmetric keys.","parent_name":"Ed25519"},"Classes/Ed25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEd25519(im)sharedKeyLenWithKey:":{"name":"sharedKeyLen(key:)","abstract":"<p>Return number of bytes required to hold shared key.","parent_name":"Ed25519"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/s:22VirgilCryptoFoundation5EciesC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Ecies"},"Classes/Ecies.html#/s:22VirgilCryptoFoundation5EciesC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setCipherWithCipher:":{"name":"setCipher(cipher:)","abstract":"<p>Undocumented</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setMacWithMac:":{"name":"setMac(mac:)","abstract":"<p>Undocumented</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setKdfWithKdf:":{"name":"setKdf(kdf:)","abstract":"<p>Undocumented</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setEphemeralKeyWithEphemeralKey:":{"name":"setEphemeralKey(ephemeralKey:)","abstract":"<p>Set ephemeral key that used for data encryption.","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setKeyAlgWithKeyAlg:":{"name":"setKeyAlg(keyAlg:)","abstract":"<p>Set weak reference to the key algorithm.","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)releaseKeyAlg":{"name":"releaseKeyAlg()","abstract":"<p>Release weak reference to the key algorithm.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)encryptedLenWithPublicKey:dataLen:":{"name":"encryptedLen(publicKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)encryptWithPublicKey:data:error:":{"name":"encrypt(publicKey:data:)","abstract":"<p>Encrypt data with a given public key.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)decryptedLenWithPrivateKey:dataLen:":{"name":"decryptedLen(privateKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Ecies"},"Classes/Ecies.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcies(im)decryptWithPrivateKey:data:error:":{"name":"decrypt(privateKey:data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Ecies"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/s:22VirgilCryptoFoundation12EccPublicKeyC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/s:22VirgilCryptoFoundation12EccPublicKeyC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"EccPublicKey"},"Classes/EccPublicKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPublicKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"EccPublicKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/s:22VirgilCryptoFoundation13EccPrivateKeyC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/s:22VirgilCryptoFoundation13EccPrivateKeyC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)algId":{"name":"algId()","abstract":"<p>Algorithm identifier the key belongs to.</p>","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)algInfo":{"name":"algInfo()","abstract":"<p>Return algorithm information that can be used for serialization.</p>","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)len":{"name":"len()","abstract":"<p>Length of the key in bytes.</p>","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)bitlen":{"name":"bitlen()","abstract":"<p>Length of the key in bits.</p>","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)isValid":{"name":"isValid()","abstract":"<p>Check that key is valid.","parent_name":"EccPrivateKey"},"Classes/EccPrivateKey.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccPrivateKey(im)extractPublicKey":{"name":"extractPublicKey()","abstract":"<p>Extract public key from the private key.</p>","parent_name":"EccPrivateKey"},"Classes/EccAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccAlgInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccAlgInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/s:22VirgilCryptoFoundation10EccAlgInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/s:22VirgilCryptoFoundation10EccAlgInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/s:22VirgilCryptoFoundation10EccAlgInfoC5algId03keyH006domainH0AcA0eH0O_AA03OidH0OAJtcfc":{"name":"init(algId:keyId:domainId:)","abstract":"<p>Create algorithm info with EC generic key identificator, EC domain group identificator.</p>","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccAlgInfo(im)keyId":{"name":"keyId()","abstract":"<p>Return EC specific algorithm identificator {unrestricted, ecDH, ecMQV}.</p>","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccAlgInfo(im)domainId":{"name":"domainId()","abstract":"<p>Return EC domain group identificator.</p>","parent_name":"EccAlgInfo"},"Classes/EccAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEccAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"EccAlgInfo"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(py)canImportPublicKey":{"name":"canImportPublicKey","abstract":"<p>Defines whether a public key can be imported or not.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(py)canExportPublicKey":{"name":"canExportPublicKey","abstract":"<p>Define whether a public key can be exported or not.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(py)canImportPrivateKey":{"name":"canImportPrivateKey","abstract":"<p>Define whether a private key can be imported or not.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(py)canExportPrivateKey":{"name":"canExportPrivateKey","abstract":"<p>Define whether a private key can be exported or not.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/s:22VirgilCryptoFoundation3EccC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Ecc"},"Classes/Ecc.html#/s:22VirgilCryptoFoundation3EccC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)setEciesWithEcies:":{"name":"setEcies(ecies:)","abstract":"<p>Undocumented</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)generateKeyWithAlgId:error:":{"name":"generateKey(algId:)","abstract":"<p>Generate new private key.","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)generateEphemeralKeyWithKey:error:":{"name":"generateEphemeralKey(key:)","abstract":"<p>Generate ephemeral private key of the same type.","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)importPublicKeyWithRawKey:error:":{"name":"importPublicKey(rawKey:)","abstract":"<p>Import public key from the raw binary format.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)exportPublicKeyWithPublicKey:error:":{"name":"exportPublicKey(publicKey:)","abstract":"<p>Export public key to the raw binary format.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)importPrivateKeyWithRawKey:error:":{"name":"importPrivateKey(rawKey:)","abstract":"<p>Import private key from the raw binary format.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)exportPrivateKeyWithPrivateKey:error:":{"name":"exportPrivateKey(privateKey:)","abstract":"<p>Export private key in the raw binary format.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)canEncryptWithPublicKey:dataLen:":{"name":"canEncrypt(publicKey:dataLen:)","abstract":"<p>Check if algorithm can encrypt data with a given key.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)encryptedLenWithPublicKey:dataLen:":{"name":"encryptedLen(publicKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)encryptWithPublicKey:data:error:":{"name":"encrypt(publicKey:data:)","abstract":"<p>Encrypt data with a given public key.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)canDecryptWithPrivateKey:dataLen:":{"name":"canDecrypt(privateKey:dataLen:)","abstract":"<p>Check if algorithm can decrypt data with a given key.","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)decryptedLenWithPrivateKey:dataLen:":{"name":"decryptedLen(privateKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)decryptWithPrivateKey:data:error:":{"name":"decrypt(privateKey:data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)canSignWithPrivateKey:":{"name":"canSign(privateKey:)","abstract":"<p>Check if algorithm can sign data digest with a given key.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)signatureLenWithKey:":{"name":"signatureLen(key:)","abstract":"<p>Return length in bytes required to hold signature.","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)signHashWithPrivateKey:hashId:digest:error:":{"name":"signHash(privateKey:hashId:digest:)","abstract":"<p>Sign data digest with a given private key.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)canVerifyWithPublicKey:":{"name":"canVerify(publicKey:)","abstract":"<p>Check if algorithm can verify data digest with a given key.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)verifyHashWithPublicKey:hashId:digest:signature:":{"name":"verifyHash(publicKey:hashId:digest:signature:)","abstract":"<p>Verify data digest with a given public key and signature.</p>","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)computeSharedKeyWithPublicKey:privateKey:error:":{"name":"computeSharedKey(publicKey:privateKey:)","abstract":"<p>Compute shared key for 2 asymmetric keys.","parent_name":"Ecc"},"Classes/Ecc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFEcc(im)sharedKeyLenWithKey:":{"name":"sharedKeyLen(key:)","abstract":"<p>Return number of bytes required to hold shared key.","parent_name":"Ecc"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(py)canImportPublicKey":{"name":"canImportPublicKey","abstract":"<p>Defines whether a public key can be imported or not.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(py)canExportPublicKey":{"name":"canExportPublicKey","abstract":"<p>Define whether a public key can be exported or not.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(py)canImportPrivateKey":{"name":"canImportPrivateKey","abstract":"<p>Define whether a private key can be imported or not.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(py)canExportPrivateKey":{"name":"canExportPrivateKey","abstract":"<p>Define whether a private key can be exported or not.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/s:22VirgilCryptoFoundation10Curve25519C4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Curve25519"},"Classes/Curve25519.html#/s:22VirgilCryptoFoundation10Curve25519C3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Undocumented</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)setEciesWithEcies:":{"name":"setEcies(ecies:)","abstract":"<p>Undocumented</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)generateKeyAndReturnError:":{"name":"generateKey()","abstract":"<p>Generate new private key.","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)generateEphemeralKeyWithKey:error:":{"name":"generateEphemeralKey(key:)","abstract":"<p>Generate ephemeral private key of the same type.","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)importPublicKeyWithRawKey:error:":{"name":"importPublicKey(rawKey:)","abstract":"<p>Import public key from the raw binary format.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)exportPublicKeyWithPublicKey:error:":{"name":"exportPublicKey(publicKey:)","abstract":"<p>Export public key to the raw binary format.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)importPrivateKeyWithRawKey:error:":{"name":"importPrivateKey(rawKey:)","abstract":"<p>Import private key from the raw binary format.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)exportPrivateKeyWithPrivateKey:error:":{"name":"exportPrivateKey(privateKey:)","abstract":"<p>Export private key in the raw binary format.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)canEncryptWithPublicKey:dataLen:":{"name":"canEncrypt(publicKey:dataLen:)","abstract":"<p>Check if algorithm can encrypt data with a given key.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)encryptedLenWithPublicKey:dataLen:":{"name":"encryptedLen(publicKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)encryptWithPublicKey:data:error:":{"name":"encrypt(publicKey:data:)","abstract":"<p>Encrypt data with a given public key.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)canDecryptWithPrivateKey:dataLen:":{"name":"canDecrypt(privateKey:dataLen:)","abstract":"<p>Check if algorithm can decrypt data with a given key.","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)decryptedLenWithPrivateKey:dataLen:":{"name":"decryptedLen(privateKey:dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)decryptWithPrivateKey:data:error:":{"name":"decrypt(privateKey:data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)computeSharedKeyWithPublicKey:privateKey:error:":{"name":"computeSharedKey(publicKey:privateKey:)","abstract":"<p>Compute shared key for 2 asymmetric keys.","parent_name":"Curve25519"},"Classes/Curve25519.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCurve25519(im)sharedKeyLenWithKey:":{"name":"sharedKeyLen(key:)","abstract":"<p>Return number of bytes required to hold shared key.","parent_name":"Curve25519"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(cpy)reseedInterval":{"name":"reseedInterval","abstract":"<p>The interval before reseed is performed by default.</p>","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(cpy)entropyLen":{"name":"entropyLen","abstract":"<p>The amount of entropy used per seed by default.</p>","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/s:22VirgilCryptoFoundation7CtrDrbgC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/s:22VirgilCryptoFoundation7CtrDrbgC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)setEntropySourceWithEntropySource:error:":{"name":"setEntropySource(entropySource:)","abstract":"<p>Undocumented</p>","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)enablePredictionResistance":{"name":"enablePredictionResistance()","abstract":"<p>Force entropy to be gathered at the beginning of every call to","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)setReseedIntervalWithInterval:":{"name":"setReseedInterval(interval:)","abstract":"<p>Sets the reseed interval.","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)setEntropyLenWithLen:":{"name":"setEntropyLen(len:)","abstract":"<p>Sets the amount of entropy grabbed on each seed or reseed.","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)randomWithDataLen:error:":{"name":"random(dataLen:)","abstract":"<p>Generate random bytes.","parent_name":"CtrDrbg"},"Classes/CtrDrbg.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCtrDrbg(im)reseedAndReturnError:":{"name":"reseed()","abstract":"<p>Retrieve new seed data from the entropy sources.</p>","parent_name":"CtrDrbg"},"Classes/CipherAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCipherAlgInfo(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"CipherAlgInfo"},"Classes/CipherAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCipherAlgInfo(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"CipherAlgInfo"},"Classes/CipherAlgInfo.html#/s:22VirgilCryptoFoundation13CipherAlgInfoC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"CipherAlgInfo"},"Classes/CipherAlgInfo.html#/s:22VirgilCryptoFoundation13CipherAlgInfoC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"CipherAlgInfo"},"Classes/CipherAlgInfo.html#/s:22VirgilCryptoFoundation13CipherAlgInfoC5algId5nonceAcA0eH0O_0C04DataVtcfc":{"name":"init(algId:nonce:)","abstract":"<p>Create symmetric cipher algorithm info with identificator and input vector.</p>","parent_name":"CipherAlgInfo"},"Classes/CipherAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCipherAlgInfo(im)nonce":{"name":"nonce()","abstract":"<p>Return IV.</p>","parent_name":"CipherAlgInfo"},"Classes/CipherAlgInfo.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFCipherAlgInfo(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"CipherAlgInfo"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(cpy)pointLen":{"name":"pointLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(cpy)mpiLen":{"name":"mpiLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/s:22VirgilCryptoFoundation14BrainkeyServerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/s:22VirgilCryptoFoundation14BrainkeyServerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Random used for key generation, proofs, etc.</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(im)setOperationRandomWithOperationRandom:":{"name":"setOperationRandom(operationRandom:)","abstract":"<p>Random used for crypto operations to make them const-time</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(im)generateIdentitySecretAndReturnError:":{"name":"generateIdentitySecret()","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyServer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyServer(im)hardenWithIdentitySecret:blindedPoint:error:":{"name":"harden(identitySecret:blindedPoint:)","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyServer"},"Classes/BrainkeyClientBlindResult.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClientBlindResult(py)deblindFactor":{"name":"deblindFactor","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClientBlindResult"},"Classes/BrainkeyClientBlindResult.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClientBlindResult(py)blindedPoint":{"name":"blindedPoint","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClientBlindResult"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(cpy)pointLen":{"name":"pointLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(cpy)mpiLen":{"name":"mpiLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(cpy)seedLen":{"name":"seedLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(cpy)maxPasswordLen":{"name":"maxPasswordLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(cpy)maxKeyNameLen":{"name":"maxKeyNameLen","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/s:22VirgilCryptoFoundation14BrainkeyClientC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/s:22VirgilCryptoFoundation14BrainkeyClientC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(im)setRandomWithRandom:":{"name":"setRandom(random:)","abstract":"<p>Random used for key generation, proofs, etc.</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(im)setOperationRandomWithOperationRandom:":{"name":"setOperationRandom(operationRandom:)","abstract":"<p>Random used for crypto operations to make them const-time</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(im)setupDefaultsAndReturnError:":{"name":"setupDefaults()","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(im)blindWithPassword:error:":{"name":"blind(password:)","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/BrainkeyClient.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBrainkeyClient(im)deblindWithPassword:hardenedPoint:deblindFactor:keyName:error:":{"name":"deblind(password:hardenedPoint:deblindFactor:keyName:)","abstract":"<p>Undocumented</p>","parent_name":"BrainkeyClient"},"Classes/Base64.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBase64(cm)encodedLenWithDataLen:":{"name":"encodedLen(dataLen:)","abstract":"<p>Calculate length in bytes required to hold an encoded base64 string.</p>","parent_name":"Base64"},"Classes/Base64.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBase64(cm)encodeWithData:":{"name":"encode(data:)","abstract":"<p>Encode given data to the base64 format.","parent_name":"Base64"},"Classes/Base64.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBase64(cm)decodedLenWithStrLen:":{"name":"decodedLen(strLen:)","abstract":"<p>Calculate length in bytes required to hold a decoded base64 string.</p>","parent_name":"Base64"},"Classes/Base64.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFBase64(cm)decodeWithStr:error:":{"name":"decode(str:)","abstract":"<p>Decode given data from the base64 format.</p>","parent_name":"Base64"},"Classes/AuthEncryptAuthEncryptResult.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAuthEncryptAuthEncryptResult(py)out":{"name":"out","abstract":"<p>Undocumented</p>","parent_name":"AuthEncryptAuthEncryptResult"},"Classes/AuthEncryptAuthEncryptResult.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAuthEncryptAuthEncryptResult(py)tag":{"name":"tag","abstract":"<p>Undocumented</p>","parent_name":"AuthEncryptAuthEncryptResult"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/s:22VirgilCryptoFoundation6Asn1wrC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/s:22VirgilCryptoFoundation6Asn1wrC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)resetWithOut:outLen:":{"name":"reset(out:outLen:)","abstract":"<p>Reset all internal states and prepare to new ASN.1 writing operations.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)finishWithDoNotAdjust:":{"name":"finish(doNotAdjust:)","abstract":"<p>Finalize writing and forbid further operations.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)bytes":{"name":"bytes()","abstract":"<p>Returns pointer to the inner buffer.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)len":{"name":"len()","abstract":"<p>Returns total inner buffer length.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writtenLen":{"name":"writtenLen()","abstract":"<p>Returns how many bytes were already written to the ASN.1 structure.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)unwrittenLen":{"name":"unwrittenLen()","abstract":"<p>Returns how many bytes are available for writing.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)hasError":{"name":"hasError()","abstract":"<p>Return true if status is not <q>success</q>.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)statusAndReturnError:":{"name":"status()","abstract":"<p>Return error code.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)reserveWithLen:":{"name":"reserve(len:)","abstract":"<p>Move writing position backward for the given length.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeTagWithTag:":{"name":"writeTag(tag:)","abstract":"<p>Write ASN.1 tag.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeContextTagWithTag:len:":{"name":"writeContextTag(tag:len:)","abstract":"<p>Write context-specific ASN.1 tag.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeLenWithLen:":{"name":"writeLen(len:)","abstract":"<p>Write length of the following data.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeIntWithValue:":{"name":"writeInt(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeInt8WithValue:":{"name":"writeInt8(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeInt16WithValue:":{"name":"writeInt16(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeInt32WithValue:":{"name":"writeInt32(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeInt64WithValue:":{"name":"writeInt64(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeUintWithValue:":{"name":"writeUint(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeUint8WithValue:":{"name":"writeUint8(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeUint16WithValue:":{"name":"writeUint16(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeUint32WithValue:":{"name":"writeUint32(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeUint64WithValue:":{"name":"writeUint64(value:)","abstract":"<p>Write ASN.1 type: INTEGER.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeBoolWithValue:":{"name":"writeBool(value:)","abstract":"<p>Write ASN.1 type: BOOLEAN.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeNull":{"name":"writeNull()","abstract":"<p>Write ASN.1 type: NULL.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeOctetStrWithValue:":{"name":"writeOctetStr(value:)","abstract":"<p>Write ASN.1 type: OCTET STRING.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeOctetStrAsBitstringWithValue:":{"name":"writeOctetStrAsBitstring(value:)","abstract":"<p>Write ASN.1 type: BIT STRING with all zero unused bits.</p>","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeDataWithData:":{"name":"writeData(data:)","abstract":"<p>Write raw data directly to the ASN.1 structure.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeUtf8StrWithValue:":{"name":"writeUtf8Str(value:)","abstract":"<p>Write ASN.1 type: UTF8String.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeOidWithValue:":{"name":"writeOid(value:)","abstract":"<p>Write ASN.1 type: OID.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeSequenceWithLen:":{"name":"writeSequence(len:)","abstract":"<p>Mark previously written data of given length as ASN.1 type: SQUENCE.","parent_name":"Asn1wr"},"Classes/Asn1wr.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1wr(im)writeSetWithLen:":{"name":"writeSet(len:)","abstract":"<p>Mark previously written data of given length as ASN.1 type: SET.","parent_name":"Asn1wr"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/s:22VirgilCryptoFoundation6Asn1rdC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/s:22VirgilCryptoFoundation6Asn1rdC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)resetWithData:":{"name":"reset(data:)","abstract":"<p>Reset all internal states and prepare to new ASN.1 reading operations.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)leftLen":{"name":"leftLen()","abstract":"<p>Return length in bytes how many bytes are left for reading.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)hasError":{"name":"hasError()","abstract":"<p>Return true if status is not <q>success</q>.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)statusAndReturnError:":{"name":"status()","abstract":"<p>Return error code.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)getTag":{"name":"getTag()","abstract":"<p>Get tag of the current ASN.1 element.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)getLen":{"name":"getLen()","abstract":"<p>Get length of the current ASN.1 element.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)getDataLen":{"name":"getDataLen()","abstract":"<p>Get length of the current ASN.1 element with tag and length itself.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readTagWithTag:":{"name":"readTag(tag:)","abstract":"<p>Read ASN.1 type: TAG.","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readContextTagWithTag:":{"name":"readContextTag(tag:)","abstract":"<p>Read ASN.1 type: context-specific TAG.","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readInt":{"name":"readInt()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readInt8":{"name":"readInt8()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readInt16":{"name":"readInt16()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readInt32":{"name":"readInt32()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readInt64":{"name":"readInt64()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readUint":{"name":"readUint()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readUint8":{"name":"readUint8()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readUint16":{"name":"readUint16()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readUint32":{"name":"readUint32()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readUint64":{"name":"readUint64()","abstract":"<p>Read ASN.1 type: INTEGER.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readBool":{"name":"readBool()","abstract":"<p>Read ASN.1 type: BOOLEAN.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readNull":{"name":"readNull()","abstract":"<p>Read ASN.1 type: NULL.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readNullOptional":{"name":"readNullOptional()","abstract":"<p>Read ASN.1 type: NULL, only if it exists.","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readOctetStr":{"name":"readOctetStr()","abstract":"<p>Read ASN.1 type: OCTET STRING.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readBitstringAsOctetStr":{"name":"readBitstringAsOctetStr()","abstract":"<p>Read ASN.1 type: BIT STRING.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readUtf8Str":{"name":"readUtf8Str()","abstract":"<p>Read ASN.1 type: UTF8String.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readOid":{"name":"readOid()","abstract":"<p>Read ASN.1 type: OID.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readDataWithLen:":{"name":"readData(len:)","abstract":"<p>Read raw data of given length.</p>","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readSequence":{"name":"readSequence()","abstract":"<p>Read ASN.1 type: CONSTRUCTED | SEQUENCE.","parent_name":"Asn1rd"},"Classes/Asn1rd.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAsn1rd(im)readSet":{"name":"readSet()","abstract":"<p>Read ASN.1 type: CONSTRUCTED | SET.","parent_name":"Asn1rd"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/s:22VirgilCryptoFoundation20AlgInfoDerSerializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/s:22VirgilCryptoFoundation20AlgInfoDerSerializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(im)setAsn1WriterWithAsn1Writer:":{"name":"setAsn1Writer(asn1Writer:)","abstract":"<p>Undocumented</p>","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(im)serializeInplaceWithAlgInfo:":{"name":"serializeInplace(algInfo:)","abstract":"<p>Serialize by using internal ASN.1 writer.","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(im)serializedLenWithAlgInfo:":{"name":"serializedLen(algInfo:)","abstract":"<p>Return buffer size enough to hold serialized algorithm.</p>","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerSerializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerSerializer(im)serializeWithAlgInfo:":{"name":"serialize(algInfo:)","abstract":"<p>Serialize algorithm info to buffer class.</p>","parent_name":"AlgInfoDerSerializer"},"Classes/AlgInfoDerDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerDeserializer(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerDeserializer(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/s:22VirgilCryptoFoundation22AlgInfoDerDeserializerC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/s:22VirgilCryptoFoundation22AlgInfoDerDeserializerC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerDeserializer(im)setAsn1ReaderWithAsn1Reader:":{"name":"setAsn1Reader(asn1Reader:)","abstract":"<p>Undocumented</p>","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerDeserializer(im)setupDefaults":{"name":"setupDefaults()","abstract":"<p>Setup predefined values to the uninitialized class dependencies.</p>","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerDeserializer(im)deserializeInplaceAndReturnError:":{"name":"deserializeInplace()","abstract":"<p>Deserialize by using internal ASN.1 reader.","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgInfoDerDeserializer.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgInfoDerDeserializer(im)deserializeWithData:error:":{"name":"deserialize(data:)","abstract":"<p>Deserialize algorithm from the data.</p>","parent_name":"AlgInfoDerDeserializer"},"Classes/AlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgFactory(cm)createHashFromInfoWithAlgInfo:":{"name":"createHashFromInfo(algInfo:)","abstract":"<p>Create algorithm that implements <q>hash stream</q> interface.</p>","parent_name":"AlgFactory"},"Classes/AlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgFactory(cm)createMacFromInfoWithAlgInfo:":{"name":"createMacFromInfo(algInfo:)","abstract":"<p>Create algorithm that implements <q>mac stream</q> interface.</p>","parent_name":"AlgFactory"},"Classes/AlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgFactory(cm)createKdfFromInfoWithAlgInfo:":{"name":"createKdfFromInfo(algInfo:)","abstract":"<p>Create algorithm that implements <q>kdf</q> interface.</p>","parent_name":"AlgFactory"},"Classes/AlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgFactory(cm)createSaltedKdfFromInfoWithAlgInfo:":{"name":"createSaltedKdfFromInfo(algInfo:)","abstract":"<p>Create algorithm that implements <q>salted kdf</q> interface.</p>","parent_name":"AlgFactory"},"Classes/AlgFactory.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAlgFactory(cm)createCipherFromInfoWithAlgInfo:":{"name":"createCipherFromInfo(algInfo:)","abstract":"<p>Create algorithm that implements <q>cipher</q> interface.</p>","parent_name":"AlgFactory"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(py)nonceLen":{"name":"nonceLen","abstract":"<p>Cipher nfonce length or IV length in bytes, or 0 if nonce is not required.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(py)keyLen":{"name":"keyLen","abstract":"<p>Cipher key length in bytes.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(py)keyBitlen":{"name":"keyBitlen","abstract":"<p>Cipher key length in bits.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(py)blockLen":{"name":"blockLen","abstract":"<p>Cipher block length in bytes.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(py)authTagLen":{"name":"authTagLen","abstract":"<p>Defines authentication tag length in bytes.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/s:22VirgilCryptoFoundation9Aes256GcmC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/s:22VirgilCryptoFoundation9Aes256GcmC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)encryptWithData:error:":{"name":"encrypt(data:)","abstract":"<p>Encrypt given data.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)encryptedLenWithDataLen:":{"name":"encryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)decryptWithData:error:":{"name":"decrypt(data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)decryptedLenWithDataLen:":{"name":"decryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)setNonceWithNonce:":{"name":"setNonce(nonce:)","abstract":"<p>Setup IV or nonce.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)setKeyWithKey:":{"name":"setKey(key:)","abstract":"<p>Set cipher encryption / decryption key.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)startEncryption":{"name":"startEncryption()","abstract":"<p>Start sequential encryption.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)startDecryption":{"name":"startDecryption()","abstract":"<p>Start sequential decryption.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Process encryption or decryption of the given data chunk.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)outLenWithDataLen:":{"name":"outLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)encryptedOutLenWithDataLen:":{"name":"encryptedOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)decryptedOutLenWithDataLen:":{"name":"decryptedOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)finishAndReturnError:":{"name":"finish()","abstract":"<p>Accomplish encryption or decryption process.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)authEncryptWithData:authData:error:":{"name":"authEncrypt(data:authData:)","abstract":"<p>Encrypt given data.","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)authEncryptedLenWithDataLen:":{"name":"authEncryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the authenticated encrypted data.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)authDecryptWithData:authData:tag:error:":{"name":"authDecrypt(data:authData:tag:)","abstract":"<p>Decrypt given data.","parent_name":"Aes256Gcm"},"Classes/Aes256Gcm.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Gcm(im)authDecryptedLenWithDataLen:":{"name":"authDecryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the authenticated decrypted data.</p>","parent_name":"Aes256Gcm"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(py)c_ctx":{"name":"c_ctx","abstract":"<p>Handle underlying C context.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(py)nonceLen":{"name":"nonceLen","abstract":"<p>Cipher nfonce length or IV length in bytes, or 0 if nonce is not required.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(py)keyLen":{"name":"keyLen","abstract":"<p>Cipher key length in bytes.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(py)keyBitlen":{"name":"keyBitlen","abstract":"<p>Cipher key length in bits.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(py)blockLen":{"name":"blockLen","abstract":"<p>Cipher block length in bytes.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)init":{"name":"init()","abstract":"<p>Create underlying C context.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/s:22VirgilCryptoFoundation9Aes256CbcC4takeACs13OpaquePointerV_tcfc":{"name":"init(take:)","abstract":"<p>Acquire C context.","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/s:22VirgilCryptoFoundation9Aes256CbcC3useACs13OpaquePointerV_tcfc":{"name":"init(use:)","abstract":"<p>Acquire retained C context.","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)algId":{"name":"algId()","abstract":"<p>Provide algorithm identificator.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)produceAlgInfo":{"name":"produceAlgInfo()","abstract":"<p>Produce object with algorithm information and configuration parameters.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)restoreAlgInfoWithAlgInfo:error:":{"name":"restoreAlgInfo(algInfo:)","abstract":"<p>Restore algorithm configuration from the given object.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)encryptWithData:error:":{"name":"encrypt(data:)","abstract":"<p>Encrypt given data.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)encryptedLenWithDataLen:":{"name":"encryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the encrypted data.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)decryptWithData:error:":{"name":"decrypt(data:)","abstract":"<p>Decrypt given data.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)decryptedLenWithDataLen:":{"name":"decryptedLen(dataLen:)","abstract":"<p>Calculate required buffer length to hold the decrypted data.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)setNonceWithNonce:":{"name":"setNonce(nonce:)","abstract":"<p>Setup IV or nonce.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)setKeyWithKey:":{"name":"setKey(key:)","abstract":"<p>Set cipher encryption / decryption key.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)startEncryption":{"name":"startEncryption()","abstract":"<p>Start sequential encryption.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)startDecryption":{"name":"startDecryption()","abstract":"<p>Start sequential decryption.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)updateWithData:":{"name":"update(data:)","abstract":"<p>Process encryption or decryption of the given data chunk.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)outLenWithDataLen:":{"name":"outLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)encryptedOutLenWithDataLen:":{"name":"encryptedOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)decryptedOutLenWithDataLen:":{"name":"decryptedOutLen(dataLen:)","abstract":"<p>Return buffer length required to hold an output of the methods","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFAes256Cbc(im)finishAndReturnError:":{"name":"finish()","abstract":"<p>Accomplish encryption or decryption process.</p>","parent_name":"Aes256Cbc"},"Classes/Aes256Cbc.html":{"name":"Aes256Cbc","abstract":"<p>Implementation of the symmetric cipher AES-256 bit in a CBC mode."},"Classes/Aes256Gcm.html":{"name":"Aes256Gcm","abstract":"<p>Implementation of the symmetric cipher AES-256 bit in a GCM mode."},"Classes/AlgFactory.html":{"name":"AlgFactory","abstract":"<p>Create algorithms based on the given information.</p>"},"Classes/AlgInfoDerDeserializer.html":{"name":"AlgInfoDerDeserializer","abstract":"<p>Provide DER deserializer of algorithm information.</p>"},"Classes/AlgInfoDerSerializer.html":{"name":"AlgInfoDerSerializer","abstract":"<p>Provide DER serializer of algorithm information.</p>"},"Classes/Asn1rd.html":{"name":"Asn1rd","abstract":"<p>This is MbedTLS implementation of ASN.1 reader.</p>"},"Classes/Asn1wr.html":{"name":"Asn1wr","abstract":"<p>This is MbedTLS implementation of ASN.1 writer.</p>"},"Classes/AuthEncryptAuthEncryptResult.html":{"name":"AuthEncryptAuthEncryptResult","abstract":"<p>Encapsulate result of method AuthEncrypt.authEncrypt()</p>"},"Classes/Base64.html":{"name":"Base64","abstract":"<p>Implementation of the Base64 algorithm RFC 1421 and RFC 2045.</p>"},"Classes/BrainkeyClient.html":{"name":"BrainkeyClient","abstract":"<p>Undocumented</p>"},"Classes/BrainkeyClientBlindResult.html":{"name":"BrainkeyClientBlindResult","abstract":"<p>Encapsulate result of method BrainkeyClient.blind()</p>"},"Classes/BrainkeyServer.html":{"name":"BrainkeyServer","abstract":"<p>Undocumented</p>"},"Classes/CipherAlgInfo.html":{"name":"CipherAlgInfo","abstract":"<p>Handle symmetric cipher algorithm information.</p>"},"Classes/CtrDrbg.html":{"name":"CtrDrbg","abstract":"<p>Implementation of the RNG using deterministic random bit generators"},"Classes/Curve25519.html":{"name":"Curve25519","abstract":"<p>This is implementation of Curve25519 elliptic curve algorithms.</p>"},"Classes/Ecc.html":{"name":"Ecc","abstract":"<p>Elliptic curve cryptography implementation."},"Classes/EccAlgInfo.html":{"name":"EccAlgInfo","abstract":"<p>Handle algorithm information about ECP.</p>"},"Classes/EccPrivateKey.html":{"name":"EccPrivateKey","abstract":"<p>Handles ECC private key.</p>"},"Classes/EccPublicKey.html":{"name":"EccPublicKey","abstract":"<p>Handles ECC public key.</p>"},"Classes/Ecies.html":{"name":"Ecies","abstract":"<p>Virgil implementation of the ECIES algorithm.</p>"},"Classes/Ed25519.html":{"name":"Ed25519","abstract":"<p>This is implementation of Ed25519 elliptic curve algorithms.</p>"},"Classes/EntropyAccumulator.html":{"name":"EntropyAccumulator","abstract":"<p>Implementation based on a simple entropy accumulator.</p>"},"Classes/FakeRandom.html":{"name":"FakeRandom","abstract":"<p>Random number generator that is used for test purposes only.</p>"},"Classes.html#/c:@M@VirgilCryptoFoundation@objc(cs)VSCFFoundationImplementation":{"name":"FoundationImplementation","abstract":"<p>Undocumented</p>"},"Classes/GroupSession.html":{"name":"GroupSession","abstract":"<p>Group chat encryption session.</p>"},"Classes/GroupSessionMessage.html":{"name":"GroupSessionMessage","abstract":"<p>Class represents group session message</p>"},"Classes/GroupSessionTicket.html":{"name":"GroupSessionTicket","abstract":"<p>Group ticket used to start group session, remove participants or proactive to rotate encryption key.</p>"},"Classes/HashBasedAlgInfo.html":{"name":"HashBasedAlgInfo","abstract":"<p>Handle hashed based algorithm information, i.e. HKDF, HMAC, etc.</p>"},"Classes/Hkdf.html":{"name":"Hkdf","abstract":"<p>Virgil Security implementation of the HKDF (RFC 6234) algorithm.</p>"},"Classes/Hmac.html":{"name":"Hmac","abstract":"<p>Virgil Security implementation of HMAC algorithm (RFC 2104) (FIPS PUB 198-1).</p>"},"Classes/Kdf1.html":{"name":"Kdf1","abstract":"<p>Virgil Security implementation of the KDF1 (ISO-18033-2) algorithm.</p>"},"Classes/Kdf2.html":{"name":"Kdf2","abstract":"<p>Virgil Security implementation of the KDF2 (ISO-18033-2) algorithm.</p>"},"Classes/KeyAlgFactory.html":{"name":"KeyAlgFactory","abstract":"<p>Create a bridge between <q>raw keys</q> and algorithms that can import them.</p>"},"Classes/KeyAsn1Deserializer.html":{"name":"KeyAsn1Deserializer","abstract":"<p>Implements PKCS#8 and SEC1 key deserialization from DER / PEM format.</p>"},"Classes/KeyAsn1Serializer.html":{"name":"KeyAsn1Serializer","abstract":"<p>Implements key serialization in the ASN.1 format (DER / PEM):"},"Classes/KeyMaterialRng.html":{"name":"KeyMaterialRng","abstract":"<p>Random number generator that generate deterministic sequence based"},"Classes/KeyProvider.html":{"name":"KeyProvider","abstract":"<p>Provide functionality for private key generation and importing that"},"Classes/KeyRecipientInfo.html":{"name":"KeyRecipientInfo","abstract":"<p>Handle information about recipient that is defined by a Public Key.</p>"},"Classes/KeyRecipientInfoList.html":{"name":"KeyRecipientInfoList","abstract":"<p>Handles a list of <q>key recipient info</q> class objects.</p>"},"Classes/ListKeyValueNode.html":{"name":"ListKeyValueNode","abstract":"<p>Double linked list node with key and value.</p>"},"Classes/MessageInfo.html":{"name":"MessageInfo","abstract":"<p>Handle information about an encrypted message and algorithms"},"Classes/MessageInfoCustomParams.html":{"name":"MessageInfoCustomParams","abstract":"<p>Undocumented</p>"},"Classes/MessageInfoDerSerializer.html":{"name":"MessageInfoDerSerializer","abstract":"<p>CMS based implementation of the class <q>message info</q> serialization.</p>"},"Classes/Oid.html":{"name":"Oid","abstract":"<p>Provide conversion logic between OID and algorithm tags.</p>"},"Classes/PasswordRecipientInfo.html":{"name":"PasswordRecipientInfo","abstract":"<p>Handle information about recipient that is defined by a password.</p>"},"Classes/PasswordRecipientInfoList.html":{"name":"PasswordRecipientInfoList","abstract":"<p>Handles a list of <q>password recipient info</q> class objects.</p>"},"Classes/PbeAlgInfo.html":{"name":"PbeAlgInfo","abstract":"<p>Handle information about password-based encryption algorithm.</p>"},"Classes/Pem.html":{"name":"Pem","abstract":"<p>Simple PEM wrapper.</p>"},"Classes/Pkcs5Pbes2.html":{"name":"Pkcs5Pbes2","abstract":"<p>Virgil Security implementation of the PBES2 (RFC 8018) algorithm.</p>"},"Classes/Pkcs5Pbkdf2.html":{"name":"Pkcs5Pbkdf2","abstract":"<p>Virgil Security implementation of the PBKDF2 (RFC 8018) algorithm.</p>"},"Classes/Pkcs8Serializer.html":{"name":"Pkcs8Serializer","abstract":"<p>Implements PKCS#8 key serialization to DER format.</p>"},"Classes/RawPrivateKey.html":{"name":"RawPrivateKey","abstract":"<p>Handles interchangeable private key representation.</p>"},"Classes/RawPublicKey.html":{"name":"RawPublicKey","abstract":"<p>Handles interchangeable public key representation.</p>"},"Classes/RecipientCipher.html":{"name":"RecipientCipher","abstract":"<p>This class provides hybrid encryption algorithm that combines symmetric"},"Classes/Rsa.html":{"name":"Rsa","abstract":"<p>RSA implementation.</p>"},"Classes/RsaPrivateKey.html":{"name":"RsaPrivateKey","abstract":"<p>Handles RSA private key.</p>"},"Classes/RsaPublicKey.html":{"name":"RsaPublicKey","abstract":"<p>Handles RSA public key.</p>"},"Classes/SaltedKdfAlgInfo.html":{"name":"SaltedKdfAlgInfo","abstract":"<p>Handle KDF algorithms that are configured with salt and iteration count.</p>"},"Classes/Sec1Serializer.html":{"name":"Sec1Serializer","abstract":"<p>Implements SEC 1 key serialization to DER format."},"Classes/SeedEntropySource.html":{"name":"SeedEntropySource","abstract":"<p>Deterministic entropy source that is based only on the given seed.</p>"},"Classes/Sha224.html":{"name":"Sha224","abstract":"<p>This is MbedTLS implementation of SHA224.</p>"},"Classes/Sha256.html":{"name":"Sha256","abstract":"<p>This is MbedTLS implementation of SHA256.</p>"},"Classes/Sha384.html":{"name":"Sha384","abstract":"<p>This is MbedTLS implementation of SHA384.</p>"},"Classes/Sha512.html":{"name":"Sha512","abstract":"<p>This is MbedTLS implementation of SHA512.</p>"},"Classes/Signer.html":{"name":"Signer","abstract":"<p>Sign data of any size.</p>"},"Classes/SimpleAlgInfo.html":{"name":"SimpleAlgInfo","abstract":"<p>Handle simple algorithm information (just id).</p>"},"Classes/Verifier.html":{"name":"Verifier","abstract":"<p>Verify data of any size."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}